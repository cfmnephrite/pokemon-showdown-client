{"version":3,"sources":["../src/battle.ts"],"names":["Pokemon","data","side","name","speciesForme","ident","details","searchid","slot","fainted","hp","maxhp","level","gender","shiny","hpcolor","moves","ability","baseAbility","item","itemEffect","prevItem","prevItemEffect","boosts","status","statusStage","volatiles","turnstatuses","movestatuses","lastMove","moveTrack","statusData","sleepTurns","toxicTurns","sprite","battle","scene","addPokemonSprite","isActive","active","includes","getHPColor","ratio","getHPColorClass","getPixelRange","pixels","color","epsilon","getFormattedRange","range","precision","separator","percentage","Math","abs","floor","toFixed","lower","upper","ceil","getDamageRange","damage","length","undefined","oldrange","newrange","r","healthParse","hpstring","parsedamage","heal","parenIndex","lastIndexOf","parseFloat","isNaN","ret","percent","round","substr","oldhp","oldmaxhp","oldwidth","hpWidth","oldcolor","parseHealth","oldnum","delta","deltawidth","checkDetails","indexOf","replace","getIdent","slots","removeVolatile","volatile","removeEffect","hasVolatile","addVolatile","args","addEffect","removeTurnstatus","hasTurnstatus","addTurnstatus","toID","clearTurnstatuses","id","updateStatbar","removeMovestatus","hasMovestatus","addMovestatus","clearMovestatuses","clearVolatiles","clearEffects","rememberMove","moveName","pp","recursionSource","Dex","getMove","charAt","transform","entry","push","rememberAbility","isNotBase","getAbility","getBoost","boostStat","boostStatTable","atk","def","spa","spd","spe","accuracy","evasion","spc","isRBY","gen","tier","goodBoostTable","badBoostTable","getWeightKg","serverPokemon","autotomizeFactor","autotomize","max","getSpecies","weightkg","getBoostType","clearVolatile","i","splice","copyVolatileFrom","pokemon","copyAll","removeTransform","copyTypesFrom","getTypes","types","addedType","join","typechange","split","filter","typeName","typeadd","isGrounded","hasPseudoWeather","getTypeList","concat","getSpeciesForme","formechange","dex","getBaseSpecies","reset","maxWidth","getHPText","destroy","Side","n","foe","ally","avatar","rating","totalPokemon","x","y","z","missedPokemon","wisher","lastPokemon","sideConditions","sideid","isFar","rollTrainerSprites","sprites","random","behindx","offset","behindy","leftof","behind","clearPokemon","setAvatar","setName","addSideCondition","effect","condition","removeSideCondition","addPokemon","replaceSlot","oldItem","parseDetails","poke","speciesClause","existingTable","toRemove","poke1i","poke1","poke2i","poke2","illusionFound","curPoke","updateSidebar","switchIn","animSummon","dragIn","oldpokemon","animDragOut","animDragIn","animUnsummon","switchOut","log","from","swapTo","kwArgs","target","oslot","swapWith","nslot","faint","animFaint","Battle","options","sidesSwitched","preemptStepQueue","waitForAnimations","currentStep","seeking","activeMoveIsSpread","mute","messageFadeTime","messageShownTime","turnsSinceMoved","turn","atQueueEnd","started","ended","isReplay","usesUpkeep","weather","pseudoWeather","weatherTimeLeft","weatherMinTimeLeft","mySide","nearSide","farSide","p1","p2","p3","p4","pokemonControlled","sides","myPokemon","myAllyPokemon","mod","teamPreviewCount","gameType","rated","isBlitz","endLastTurnPending","totalTimeLeft","graceTimeLeft","kickingInactive","roomid","hardcoreMode","ignoreNicks","prefs","ignoreOpponent","ignoreSpects","joinButtons","$frame","$logFrame","BattleScene","BattleSceneStub","Error","format","slice","window","ModConfig","formatid","formats","paused","debug","stepQueue","subscription","resetStep","subscribe","listener","removePseudoWeather","updateWeather","addPseudoWeather","minTimeLeft","timeLeft","pseudoWeatherName","pause","resetTurnsSinceMoved","nextStep","preempt","add","resetToCurrentTurn","seekTurn","Infinity","switchSides","setPerspective","startsWith","start","winner","prematureEnd","endLastTurn","updateStatbars","setHardcoreMode","mode","updateSidebars","setTurn","turnNum","updateTurnCounters","incrementTurn","stopSeeking","updateAcceleration","changeWeather","weatherName","isUpkeep","upkeepWeather","isExtremeWeather","activateAbility","pWeather","cond","useMove","move","fromeffect","getEffect","isZ","getItem","zMoveFrom","BattleItems","zMoveType","type","animateMove","spread","still","miss","notarget","prepare","anim","runPrepareAnim","usedMove","runMoveAnim","targets","hitTarget","curTarget","getPokemon","cantUseMove","BattleStatusAnims","runStatusAnim","resultAnim","runOtherAnim","animReset","effectOrName","effectType","abilityActivateAnim","runMinor","nextArgs","nextKwargs","then","silent","closeMessagebar","simult","CONSUMED","ofpoke","of","itemPoke","damageinfo","hover","damageAnim","trackedMove","runResidualAnim","healAnim","k","cpoke","formattedRange","diff","stat","amount","parseInt","stats","tmp","frompoke","volatilesToCopy","timeOffset","Config","server","afd","moveid","thaw","updateStatbarIfExists","eat","weaken","fail","wait","newSpeciesForme","commaIndex","trim","species","abilities","animTransform","tpoke","isCustomAnim","sanitizeName","typeAnim","already","block","interrupt","time","Number","number","pokeability","targetability","ability2","foeActive","maybeTarget","broken","getSide","upkeep","maxTimeLeft","endsWith","pwID","checkActive","beforeMove","afterMove","pokemonid","output","isTeamPreview","splitDetails","pop","curhp","colorchar","parsePokemonId","siden","test","slotChart","a","b","c","d","e","f","getSwitchedPokemon","parsedPokemonid","rememberTeamPreviewPokemon","findCorrespondingPokemon","isInactive","sidename","command","instantAdd","run","runMajor","resetSides","updateGen","ruleName","totalTime","graceTime","hasIndex","userid","app","user","get","room","rooms","BattleTextParser","parseNameParts","toUserid","users","userCount","userList","updateUserCount","updateNoUsersOnline","remove","oldid","set","away","hideJoinButtons","teamPreview","targetIndex","forGen","setFrameHTML","BattleLog","sanitizeHTML","setControlsHTML","str","shift","preemptCatchup","parseBattleLine","maybeCloseMessagebar","nextLine","err","stack","line","updateBgm","play","resume","skipTurn","forceReset","animationOn","animationOff","shouldStep","startAnimations","animations","finishAnimations","interruptionCount","done","setQueue","queue","setMute","BattleSound","require","global"],"mappings":"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","sourcesContent":["/**\r\n * Pokemon Showdown Battle\r\n *\r\n * This is the main file for handling battle animations\r\n *\r\n * Licensing note: PS's client has complicated licensing:\r\n * - The client as a whole is AGPLv3\r\n * - The battle replay/animation engine (battle-*.ts) by itself is MIT\r\n *\r\n * Layout:\r\n *\r\n * - Battle\r\n *   - Side\r\n *     - Pokemon\r\n *   - BattleScene\r\n *     - BattleLog\r\n *       - BattleTextParser\r\n *\r\n * When a Battle receives a message, it splits the message into tokens\r\n * and parses what happens, updating its own state, and then telling\r\n * BattleScene to do any relevant animations. The tokens then get\r\n * passed directly into BattleLog. If the message is an in-battle\r\n * message, it'll be extracted by BattleTextParser, which adds it to\r\n * both the battle log itself, as well as the messagebar.\r\n *\r\n * @author Guangcong Luo <guangcongluo@gmail.com>\r\n * @license MIT\r\n */\r\n\r\n/** [id, element?, ...misc] */\r\ntype EffectState = any[] & {0: ID};\r\n/** [name, minTimeLeft, maxTimeLeft] */\r\ntype WeatherState = [string, number, number];\r\ntype EffectTable = {[effectid: string]: EffectState};\r\ntype HPColor = 'r' | 'y' | 'g';\r\n\r\nclass Pokemon implements PokemonDetails, PokemonHealth {\r\n\tname = '';\r\n\tspeciesForme = '';\r\n\r\n\t/**\r\n\t * A string representing information extractable from textual\r\n\t * messages: side, nickname.\r\n\t *\r\n\t * Will be the empty string between Team Preview and the first\r\n\t * switch-in.\r\n\t *\r\n\t * Examples: `p1: Unown` or `p2: Sparky`\r\n\t */\r\n\tident = '';\r\n\t/**\r\n\t * A string representing visible information not included in\r\n\t * ident: species, level, gender, shininess. Level is left off\r\n\t * if it's 100; gender is left off if it's genderless.\r\n\t *\r\n\t * Note: Can be partially filled out in Team Preview, because certain\r\n\t * forme information and shininess isn't visible there. In those\r\n\t * cases, details can change during the first switch-in, but will\r\n\t * otherwise not change over the course of a game.\r\n\t *\r\n\t * Examples: `Mimikyu, L50, F`, `Steelix, M, shiny`\r\n\t */\r\n\tdetails = '';\r\n\t/**\r\n\t * `` `${ident}|${details}` ``. Tracked for ease of searching.\r\n\t *\r\n\t * As with ident, blank before the first switch-in, and will only\r\n\t * change during the first switch-in.\r\n\t */\r\n\tsearchid = '';\r\n\r\n\tside: Side;\r\n\tslot = 0;\r\n\r\n\tfainted = false;\r\n\thp = 0;\r\n\tmaxhp = 1000;\r\n\tlevel = 100;\r\n\tgender: GenderName = 'N';\r\n\tshiny = false;\r\n\r\n\thpcolor: HPColor = 'g';\r\n\tmoves: string[] = [];\r\n\tability = '';\r\n\tbaseAbility = '';\r\n\titem = '';\r\n\titemEffect = '';\r\n\tprevItem = '';\r\n\tprevItemEffect = '';\r\n\r\n\tboosts: {[stat: string]: number} = {};\r\n\tstatus: StatusName | 'tox' | '' | '???' = '';\r\n\tstatusStage = 0;\r\n\tvolatiles: EffectTable = {};\r\n\tturnstatuses: EffectTable = {};\r\n\tmovestatuses: EffectTable = {};\r\n\tlastMove = '';\r\n\r\n\t/** [[moveName, ppUsed]] */\r\n\tmoveTrack: [string, number][] = [];\r\n\tstatusData = {sleepTurns: 0, toxicTurns: 0};\r\n\r\n\tsprite: PokemonSprite;\r\n\r\n\tconstructor(data: PokemonDetails, side: Side) {\r\n\t\tthis.side = side;\r\n\t\tthis.speciesForme = data.speciesForme;\r\n\r\n\t\tthis.details = data.details;\r\n\t\tthis.name = data.name;\r\n\t\tthis.level = data.level;\r\n\t\tthis.shiny = data.shiny;\r\n\t\tthis.gender = data.gender || 'N';\r\n\t\tthis.ident = data.ident;\r\n\t\tthis.searchid = data.searchid;\r\n\r\n\t\tthis.sprite = side.battle.scene.addPokemonSprite(this);\r\n\t}\r\n\r\n\tisActive() {\r\n\t\treturn this.side.active.includes(this);\r\n\t}\r\n\r\n\t/** @deprecated */\r\n\tprivate getHPColor(): HPColor {\r\n\t\tif (this.hpcolor) return this.hpcolor;\r\n\t\tlet ratio = this.hp / this.maxhp;\r\n\t\tif (ratio > 0.5) return 'g';\r\n\t\tif (ratio > 0.2) return 'y';\r\n\t\treturn 'r';\r\n\t}\r\n\t/** @deprecated */\r\n\tprivate getHPColorClass() {\r\n\t\tswitch (this.getHPColor()) {\r\n\t\tcase 'y': return 'hpbar hpbar-yellow';\r\n\t\tcase 'r': return 'hpbar hpbar-red';\r\n\t\t}\r\n\t\treturn 'hpbar';\r\n\t}\r\n\tstatic getPixelRange(pixels: number, color: HPColor | ''): [number, number] {\r\n\t\tlet epsilon = 0.5 / 714;\r\n\r\n\t\tif (pixels === 0) return [0, 0];\r\n\t\tif (pixels === 1) return [0 + epsilon, 2 / 48 - epsilon];\r\n\t\tif (pixels === 9) {\r\n\t\t\tif (color === 'y') { // ratio is > 0.2\r\n\t\t\t\treturn [0.2 + epsilon, 10 / 48 - epsilon];\r\n\t\t\t} else { // ratio is <= 0.2\r\n\t\t\t\treturn [9 / 48, 0.2];\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (pixels === 24) {\r\n\t\t\tif (color === 'g') { // ratio is > 0.5\r\n\t\t\t\treturn [0.5 + epsilon, 25 / 48 - epsilon];\r\n\t\t\t} else { // ratio is exactly 0.5\r\n\t\t\t\treturn [0.5, 0.5];\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (pixels === 48) return [1, 1];\r\n\r\n\t\treturn [pixels / 48, (pixels + 1) / 48 - epsilon];\r\n\t}\r\n\tstatic getFormattedRange(range: [number, number], precision: number, separator: string) {\r\n\t\tif (range[0] === range[1]) {\r\n\t\t\tlet percentage = Math.abs(range[0] * 100);\r\n\t\t\tif (Math.floor(percentage) === percentage) {\r\n\t\t\t\treturn percentage + '%';\r\n\t\t\t}\r\n\t\t\treturn percentage.toFixed(precision) + '%';\r\n\t\t}\r\n\t\tlet lower;\r\n\t\tlet upper;\r\n\t\tif (precision === 0) {\r\n\t\t\tlower = Math.floor(range[0] * 100);\r\n\t\t\tupper = Math.ceil(range[1] * 100);\r\n\t\t} else {\r\n\t\t\tlower = (range[0] * 100).toFixed(precision);\r\n\t\t\tupper = (range[1] * 100).toFixed(precision);\r\n\t\t}\r\n\t\treturn '' + lower + separator + upper + '%';\r\n\t}\r\n\t// Returns [min, max] damage dealt as a proportion of total HP from 0 to 1\r\n\tgetDamageRange(damage: any): [number, number] {\r\n\t\tif (damage[1] !== 48) {\r\n\t\t\tlet ratio = damage[0] / damage[1];\r\n\t\t\treturn [ratio, ratio];\r\n\t\t} else if (damage.length === undefined) {\r\n\t\t\t// wrong pixel damage.\r\n\t\t\t// this case exists for backward compatibility only.\r\n\t\t\treturn [damage[2] / 100, damage[2] / 100];\r\n\t\t}\r\n\t\t// pixel damage\r\n\t\tlet oldrange = Pokemon.getPixelRange(damage[3], damage[4]);\r\n\t\tlet newrange = Pokemon.getPixelRange(damage[3] + damage[0], this.hpcolor);\r\n\t\tif (damage[0] === 0) {\r\n\t\t\t// no change in displayed pixel width\r\n\t\t\treturn [0, newrange[1] - newrange[0]];\r\n\t\t}\r\n\t\tif (oldrange[0] < newrange[0]) { // swap order\r\n\t\t\tlet r = oldrange;\r\n\t\t\toldrange = newrange;\r\n\t\t\tnewrange = r;\r\n\t\t}\r\n\t\treturn [oldrange[0] - newrange[1], oldrange[1] - newrange[0]];\r\n\t}\r\n\thealthParse(hpstring: string, parsedamage?: boolean, heal?: boolean):\r\n\t\t[number, number, number] | [number, number, number, number, HPColor] | null {\r\n\t\t// returns [delta, denominator, percent(, oldnum, oldcolor)] or null\r\n\t\tif (!hpstring || !hpstring.length) return null;\r\n\t\tlet parenIndex = hpstring.lastIndexOf('(');\r\n\t\tif (parenIndex >= 0) {\r\n\t\t\t// old style damage and health reporting\r\n\t\t\tif (parsedamage) {\r\n\t\t\t\tlet damage = parseFloat(hpstring);\r\n\t\t\t\t// unusual check preseved for backward compatbility\r\n\t\t\t\tif (isNaN(damage)) damage = 50;\r\n\t\t\t\tif (heal) {\r\n\t\t\t\t\tthis.hp += this.maxhp * damage / 100;\r\n\t\t\t\t\tif (this.hp > this.maxhp) this.hp = this.maxhp;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.hp -= this.maxhp * damage / 100;\r\n\t\t\t\t}\r\n\t\t\t\t// parse the absolute health information\r\n\t\t\t\tlet ret = this.healthParse(hpstring);\r\n\t\t\t\tif (ret && (ret[1] === 100)) {\r\n\t\t\t\t\t// support for old replays with nearest-100th damage and health\r\n\t\t\t\t\treturn [damage, 100, damage];\r\n\t\t\t\t}\r\n\t\t\t\t// complicated expressions preserved for backward compatibility\r\n\t\t\t\tlet percent = Math.round(Math.ceil(damage * 48 / 100) / 48 * 100);\r\n\t\t\t\tlet pixels = Math.ceil(damage * 48 / 100);\r\n\t\t\t\treturn [pixels, 48, percent];\r\n\t\t\t}\r\n\t\t\tif (hpstring.substr(hpstring.length - 1) !== ')') {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\thpstring = hpstring.substr(parenIndex + 1, hpstring.length - parenIndex - 2);\r\n\t\t}\r\n\r\n\t\tlet oldhp = this.fainted ? 0 : (this.hp || 1);\r\n\t\tlet oldmaxhp = this.maxhp;\r\n\t\tlet oldwidth = this.hpWidth(100);\r\n\t\tlet oldcolor = this.hpcolor;\r\n\r\n\t\tthis.side.battle.parseHealth(hpstring, this);\r\n\t\tif (oldmaxhp === 0) { // max hp not known before parsing this message\r\n\t\t\toldmaxhp = oldhp = this.maxhp;\r\n\t\t}\r\n\r\n\t\tlet oldnum = oldhp ? (Math.floor(this.maxhp * oldhp / oldmaxhp) || 1) : 0;\r\n\t\tlet delta = this.hp - oldnum;\r\n\t\tlet deltawidth = this.hpWidth(100) - oldwidth;\r\n\t\treturn [delta, this.maxhp, deltawidth, oldnum, oldcolor];\r\n\t}\r\n\tcheckDetails(details?: string) {\r\n\t\tif (!details) return false;\r\n\t\tif (details === this.details) return true;\r\n\t\tif (this.searchid) return false;\r\n\t\tif (details.indexOf(', shiny') >= 0) {\r\n\t\t\tif (this.checkDetails(details.replace(', shiny', ''))) return true;\r\n\t\t}\r\n\t\t// the actual forme was hidden on Team Preview\r\n\t\tdetails = details.replace(/(-[A-Za-z0-9-]+)?(, |$)/, '-*$2');\r\n\t\treturn (details === this.details);\r\n\t}\r\n\tgetIdent() {\r\n\t\tlet slots = ['a', 'b', 'c', 'd', 'e', 'f'];\r\n\t\treturn this.ident.substr(0, 2) + slots[this.slot] + this.ident.substr(2);\r\n\t}\r\n\tremoveVolatile(volatile: ID) {\r\n\t\tthis.side.battle.scene.removeEffect(this, volatile);\r\n\t\tif (!this.hasVolatile(volatile)) return;\r\n\t\tdelete this.volatiles[volatile];\r\n\t}\r\n\taddVolatile(volatile: ID, ...args: any[]) {\r\n\t\tif (this.hasVolatile(volatile) && !args.length) return;\r\n\t\tthis.volatiles[volatile] = [volatile, ...args] as EffectState;\r\n\t\tthis.side.battle.scene.addEffect(this, volatile);\r\n\t}\r\n\thasVolatile(volatile: ID) {\r\n\t\treturn !!this.volatiles[volatile];\r\n\t}\r\n\tremoveTurnstatus(volatile: ID) {\r\n\t\tthis.side.battle.scene.removeEffect(this, volatile);\r\n\t\tif (!this.hasTurnstatus(volatile)) return;\r\n\t\tdelete this.turnstatuses[volatile];\r\n\t}\r\n\taddTurnstatus(volatile: ID) {\r\n\t\tvolatile = toID(volatile);\r\n\t\tthis.side.battle.scene.addEffect(this, volatile);\r\n\t\tif (this.hasTurnstatus(volatile)) return;\r\n\t\tthis.turnstatuses[volatile] = [volatile];\r\n\t}\r\n\thasTurnstatus(volatile: ID) {\r\n\t\treturn !!this.turnstatuses[volatile];\r\n\t}\r\n\tclearTurnstatuses() {\r\n\t\tfor (let id in this.turnstatuses) {\r\n\t\t\tthis.removeTurnstatus(id as ID);\r\n\t\t}\r\n\t\tthis.turnstatuses = {};\r\n\t\tthis.side.battle.scene.updateStatbar(this);\r\n\t}\r\n\tremoveMovestatus(volatile: ID) {\r\n\t\tthis.side.battle.scene.removeEffect(this, volatile);\r\n\t\tif (!this.hasMovestatus(volatile)) return;\r\n\t\tdelete this.movestatuses[volatile];\r\n\t}\r\n\taddMovestatus(volatile: ID) {\r\n\t\tvolatile = toID(volatile);\r\n\t\tif (this.hasMovestatus(volatile)) return;\r\n\t\tthis.movestatuses[volatile] = [volatile];\r\n\t\tthis.side.battle.scene.addEffect(this, volatile);\r\n\t}\r\n\thasMovestatus(volatile: ID) {\r\n\t\treturn !!this.movestatuses[volatile];\r\n\t}\r\n\tclearMovestatuses() {\r\n\t\tfor (let id in this.movestatuses) {\r\n\t\t\tthis.removeMovestatus(id as ID);\r\n\t\t}\r\n\t\tthis.movestatuses = {};\r\n\t}\r\n\tclearVolatiles() {\r\n\t\tthis.volatiles = {};\r\n\t\tthis.clearTurnstatuses();\r\n\t\tthis.clearMovestatuses();\r\n\t\tthis.side.battle.scene.clearEffects(this);\r\n\t}\r\n\trememberMove(moveName: string, pp = 1, recursionSource?: string) {\r\n\t\tif (recursionSource === this.ident) return;\r\n\t\tmoveName = Dex.getMove(moveName).name;\r\n\t\tif (moveName.charAt(0) === '*') return;\r\n\t\tif (moveName === 'Struggle') return;\r\n\t\tif (this.volatiles.transform) {\r\n\t\t\t// make sure there is no infinite recursion if both Pokemon are transformed into each other\r\n\t\t\tif (!recursionSource) recursionSource = this.ident;\r\n\t\t\tthis.volatiles.transform[1].rememberMove(moveName, 0, recursionSource);\r\n\t\t\tmoveName = '*' + moveName;\r\n\t\t}\r\n\t\tfor (const entry of this.moveTrack) {\r\n\t\t\tif (moveName === entry[0]) {\r\n\t\t\t\tentry[1] += pp;\r\n\t\t\t\tif (entry[1] < 0) entry[1] = 0;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.moveTrack.push([moveName, pp]);\r\n\t}\r\n\trememberAbility(ability: string, isNotBase?: boolean) {\r\n\t\tability = Dex.getAbility(ability).name;\r\n\t\tthis.ability = ability;\r\n\t\tif (!this.baseAbility && !isNotBase) {\r\n\t\t\tthis.baseAbility = ability;\r\n\t\t}\r\n\t}\r\n\tgetBoost(boostStat: BoostStatName) {\r\n\t\tlet boostStatTable = {\r\n\t\t\tatk: 'Atk',\r\n\t\t\tdef: 'Def',\r\n\t\t\tspa: 'SpA',\r\n\t\t\tspd: 'SpD',\r\n\t\t\tspe: 'Spe',\r\n\t\t\taccuracy: 'Accuracy',\r\n\t\t\tevasion: 'Evasion',\r\n\t\t\tspc: 'Spc',\r\n\t\t};\r\n\t\tif (!this.boosts[boostStat]) {\r\n\t\t\treturn '1&times;&nbsp;' + boostStatTable[boostStat];\r\n\t\t}\r\n\t\tif (this.boosts[boostStat] > 6) this.boosts[boostStat] = 6;\r\n\t\tif (this.boosts[boostStat] < -6) this.boosts[boostStat] = -6;\r\n\t\tconst isRBY = this.side.battle.gen <= 1 && !this.side.battle.tier.includes('Stadium');\r\n\t\tif (!isRBY && (boostStat === 'accuracy' || boostStat === 'evasion')) {\r\n\t\t\tif (this.boosts[boostStat] > 0) {\r\n\t\t\t\tlet goodBoostTable = [\r\n\t\t\t\t\t'1&times;', '1.33&times;', '1.67&times;', '2&times;', '2.33&times;', '2.67&times;', '3&times;',\r\n\t\t\t\t];\r\n\t\t\t\t// let goodBoostTable = ['Normal', '+1', '+2', '+3', '+4', '+5', '+6'];\r\n\t\t\t\treturn '' + goodBoostTable[this.boosts[boostStat]] + '&nbsp;' + boostStatTable[boostStat];\r\n\t\t\t}\r\n\t\t\tlet badBoostTable = [\r\n\t\t\t\t'1&times;', '0.75&times;', '0.6&times;', '0.5&times;', '0.43&times;', '0.38&times;', '0.33&times;',\r\n\t\t\t];\r\n\t\t\t// let badBoostTable = ['Normal', '&minus;1', '&minus;2', '&minus;3', '&minus;4', '&minus;5', '&minus;6'];\r\n\t\t\treturn '' + badBoostTable[-this.boosts[boostStat]] + '&nbsp;' + boostStatTable[boostStat];\r\n\t\t}\r\n\t\tif (this.boosts[boostStat] > 0) {\r\n\t\t\tlet goodBoostTable = [\r\n\t\t\t\t'1&times;', '1.5&times;', '2&times;', '2.5&times;', '3&times;', '3.5&times;', '4&times;',\r\n\t\t\t];\r\n\t\t\t// let goodBoostTable = ['Normal', '+1', '+2', '+3', '+4', '+5', '+6'];\r\n\t\t\treturn '' + goodBoostTable[this.boosts[boostStat]] + '&nbsp;' + boostStatTable[boostStat];\r\n\t\t}\r\n\t\tlet badBoostTable = [\r\n\t\t\t'1&times;', '0.67&times;', '0.5&times;', '0.4&times;', '0.33&times;', '0.29&times;', '0.25&times;',\r\n\t\t];\r\n\t\t// let badBoostTable = ['Normal', '&minus;1', '&minus;2', '&minus;3', '&minus;4', '&minus;5', '&minus;6'];\r\n\t\treturn '' + badBoostTable[-this.boosts[boostStat]] + '&nbsp;' + boostStatTable[boostStat];\r\n\t}\r\n\tgetWeightKg(serverPokemon?: ServerPokemon) {\r\n\t\tlet autotomizeFactor = this.volatiles.autotomize?.[1] * 100 || 0;\r\n\t\treturn Math.max(this.getSpecies(serverPokemon).weightkg - autotomizeFactor, 0.1);\r\n\t}\r\n\tgetBoostType(boostStat: BoostStatName) {\r\n\t\tif (!this.boosts[boostStat]) return 'neutral';\r\n\t\tif (this.boosts[boostStat] > 0) return 'good';\r\n\t\treturn 'bad';\r\n\t}\r\n\tclearVolatile() {\r\n\t\tthis.ability = this.baseAbility;\r\n\t\tthis.boosts = {};\r\n\t\tthis.clearVolatiles();\r\n\t\tfor (let i = 0; i < this.moveTrack.length; i++) {\r\n\t\t\tif (this.moveTrack[i][0].charAt(0) === '*') {\r\n\t\t\t\tthis.moveTrack.splice(i, 1);\r\n\t\t\t\ti--;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// this.lastMove = '';\r\n\t\tthis.statusStage = 0;\r\n\t\tthis.statusData.toxicTurns = 0;\r\n\t\tif (this.side.battle.gen === 5) this.statusData.sleepTurns = 0;\r\n\t}\r\n\t/**\r\n\t * copyAll = false means Baton Pass,\r\n\t * copyAll = true means Illusion breaking\r\n\t */\r\n\tcopyVolatileFrom(pokemon: Pokemon, copyAll?: boolean) {\r\n\t\tthis.boosts = pokemon.boosts;\r\n\t\tthis.volatiles = pokemon.volatiles;\r\n\t\t// this.lastMove = pokemon.lastMove; // I think\r\n\t\tif (!copyAll) {\r\n\t\t\tdelete this.volatiles['airballoon'];\r\n\t\t\tdelete this.volatiles['attract'];\r\n\t\t\tdelete this.volatiles['autotomize'];\r\n\t\t\tdelete this.volatiles['disable'];\r\n\t\t\tdelete this.volatiles['encore'];\r\n\t\t\tdelete this.volatiles['foresight'];\r\n\t\t\tdelete this.volatiles['imprison'];\r\n\t\t\tdelete this.volatiles['laserfocus'];\r\n\t\t\tdelete this.volatiles['mimic'];\r\n\t\t\tdelete this.volatiles['miracleeye'];\r\n\t\t\tdelete this.volatiles['nightmare'];\r\n\t\t\tdelete this.volatiles['smackdown'];\r\n\t\t\tdelete this.volatiles['stockpile1'];\r\n\t\t\tdelete this.volatiles['stockpile2'];\r\n\t\t\tdelete this.volatiles['stockpile3'];\r\n\t\t\tdelete this.volatiles['torment'];\r\n\t\t\tdelete this.volatiles['typeadd'];\r\n\t\t\tdelete this.volatiles['typechange'];\r\n\t\t\tdelete this.volatiles['yawn'];\r\n\t\t}\r\n\t\tdelete this.volatiles['transform'];\r\n\t\tdelete this.volatiles['formechange'];\r\n\r\n\t\tpokemon.boosts = {};\r\n\t\tpokemon.volatiles = {};\r\n\t\tpokemon.side.battle.scene.removeTransform(pokemon);\r\n\t\tpokemon.statusStage = 0;\r\n\t}\r\n\tcopyTypesFrom(pokemon: Pokemon) {\r\n\t\tconst [types, addedType] = pokemon.getTypes();\r\n\t\tthis.addVolatile('typechange' as ID, types.join('/'));\r\n\t\tif (addedType) {\r\n\t\t\tthis.addVolatile('typeadd' as ID, addedType);\r\n\t\t} else {\r\n\t\t\tthis.removeVolatile('typeadd' as ID);\r\n\t\t}\r\n\t}\r\n\tgetTypes(serverPokemon?: ServerPokemon): [ReadonlyArray<TypeName>, TypeName | ''] {\r\n\t\tlet types: ReadonlyArray<TypeName>;\r\n\t\tif (this.volatiles.typechange) {\r\n\t\t\ttypes = this.volatiles.typechange[1].split('/');\r\n\t\t} else {\r\n\t\t\ttypes = this.getSpecies(serverPokemon).types;\r\n\t\t}\r\n\t\tif (this.hasTurnstatus('roost' as ID) && types.includes('Flying')) {\r\n\t\t\ttypes = types.filter(typeName => typeName !== 'Flying');\r\n\t\t\tif (!types.length) types = ['Normal'];\r\n\t\t}\r\n\t\tconst addedType = (this.volatiles.typeadd ? this.volatiles.typeadd[1] : '');\r\n\t\treturn [types, addedType];\r\n\t}\r\n\tisGrounded(serverPokemon?: ServerPokemon) {\r\n\t\tconst battle = this.side.battle;\r\n\t\tif (battle.hasPseudoWeather('Gravity')) {\r\n\t\t\treturn true;\r\n\t\t} else if (this.volatiles['ingrain'] && battle.gen >= 4) {\r\n\t\t\treturn true;\r\n\t\t} else if (this.volatiles['smackdown']) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tlet item = toID(serverPokemon ? serverPokemon.item : this.item);\r\n\t\tlet ability = toID(this.ability || serverPokemon?.ability);\r\n\t\tif (battle.hasPseudoWeather('Magic Room') || this.volatiles['embargo'] || ability === 'klutz') {\r\n\t\t\titem = '' as ID;\r\n\t\t}\r\n\r\n\t\tif (item === 'ironball') {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif (ability === 'levitate') {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (this.volatiles['magnetrise'] || this.volatiles['telekinesis']) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (item === 'airballoon') {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn !this.getTypeList(serverPokemon).includes('Flying');\r\n\t}\r\n\tgetTypeList(serverPokemon?: ServerPokemon) {\r\n\t\tconst [types, addedType] = this.getTypes(serverPokemon);\r\n\t\treturn addedType ? types.concat(addedType) : types;\r\n\t}\r\n\tgetSpeciesForme(serverPokemon?: ServerPokemon): string {\r\n\t\treturn this.volatiles.formechange ? this.volatiles.formechange[1] :\r\n\t\t\t(serverPokemon ? serverPokemon.speciesForme : this.speciesForme);\r\n\t}\r\n\tgetSpecies(serverPokemon?: ServerPokemon) {\r\n\t\treturn this.side.battle.dex.getSpecies(this.getSpeciesForme(serverPokemon));\r\n\t}\r\n\tgetBaseSpecies() {\r\n\t\treturn this.side.battle.dex.getSpecies(this.speciesForme);\r\n\t}\r\n\treset() {\r\n\t\tthis.clearVolatile();\r\n\t\tthis.hp = this.maxhp;\r\n\t\tthis.fainted = false;\r\n\t\tthis.status = '';\r\n\t\tthis.moveTrack = [];\r\n\t\tthis.name = this.name || this.speciesForme;\r\n\t}\r\n\t// This function is used for two things:\r\n\t//   1) The percentage to display beside the HP bar.\r\n\t//   2) The width to draw an HP bar.\r\n\t//\r\n\t// This function is NOT used in the calculation of any other displayed\r\n\t// percentages or ranges, which have their own, more complex, formulae.\r\n\thpWidth(maxWidth: number) {\r\n\t\tif (this.fainted || !this.hp) return 0;\r\n\r\n\t\t// special case for low health...\r\n\t\tif (this.hp === 1 && this.maxhp > 45) return 1;\r\n\r\n\t\tif (this.maxhp === 48) {\r\n\t\t\t// Draw the health bar to the middle of the range.\r\n\t\t\t// This affects the width of the visual health bar *only*; it\r\n\t\t\t// does not affect the ranges displayed in any way.\r\n\t\t\tlet range = Pokemon.getPixelRange(this.hp, this.hpcolor);\r\n\t\t\tlet ratio = (range[0] + range[1]) / 2;\r\n\t\t\treturn Math.round(maxWidth * ratio) || 1;\r\n\t\t}\r\n\t\tlet percentage = Math.ceil(100 * this.hp / this.maxhp);\r\n\t\tif ((percentage === 100) && (this.hp < this.maxhp)) {\r\n\t\t\tpercentage = 99;\r\n\t\t}\r\n\t\treturn percentage * maxWidth / 100;\r\n\t}\r\n\tstatic getHPText(pokemon: PokemonHealth, precision = 1) {\r\n\t\tif (pokemon.maxhp === 100) return pokemon.hp + '%';\r\n\t\tif (pokemon.maxhp !== 48) return (100 * pokemon.hp / pokemon.maxhp).toFixed(precision) + '%';\r\n\t\tlet range = Pokemon.getPixelRange(pokemon.hp, pokemon.hpcolor);\r\n\t\treturn Pokemon.getFormattedRange(range, precision, '–');\r\n\t}\r\n\tdestroy() {\r\n\t\tif (this.sprite) this.sprite.destroy();\r\n\t\tthis.sprite = null!;\r\n\t\tthis.side = null!;\r\n\t}\r\n}\r\n\r\nclass Side {\r\n\tbattle: Battle;\r\n\tname = '';\r\n\tid = '';\r\n\tsideid: SideID;\r\n\tn: number;\r\n\tisFar: boolean;\r\n\tfoe: Side = null!;\r\n\tally: Side = null!;\r\n\tavatar: string = 'unknown';\r\n\trating: string = '';\r\n\ttotalPokemon = 6;\r\n\tx = 0;\r\n\ty = 0;\r\n\tz = 0;\r\n\tmissedPokemon: Pokemon = null!;\r\n\r\n\twisher: Pokemon | null = null;\r\n\r\n\tactive = [null] as (Pokemon | null)[];\r\n\tlastPokemon = null as Pokemon | null;\r\n\tpokemon = [] as Pokemon[];\r\n\r\n\t/** [effectName, levels, minDuration, maxDuration] */\r\n\tsideConditions: {[id: string]: [string, number, number, number]} = {};\r\n\r\n\tconstructor(battle: Battle, n: number) {\r\n\t\tthis.battle = battle;\r\n\t\tthis.n = n;\r\n\t\tthis.sideid = ['p1', 'p2', 'p3', 'p4'][n] as SideID;\r\n\t\tthis.isFar = !!(n % 2);\r\n\t}\r\n\r\n\trollTrainerSprites() {\r\n\t\tlet sprites = ['lucas', 'dawn', 'ethan', 'lyra', 'hilbert', 'hilda'];\r\n\t\tthis.avatar = sprites[Math.floor(Math.random() * sprites.length)];\r\n\t}\r\n\r\n\tbehindx(offset: number) {\r\n\t\treturn this.x + (!this.isFar ? -1 : 1) * offset;\r\n\t}\r\n\tbehindy(offset: number) {\r\n\t\treturn this.y + (!this.isFar ? 1 : -1) * offset;\r\n\t}\r\n\tleftof(offset: number) {\r\n\t\treturn (!this.isFar ? -1 : 1) * offset;\r\n\t}\r\n\tbehind(offset: number) {\r\n\t\treturn this.z + (!this.isFar ? -1 : 1) * offset;\r\n\t}\r\n\r\n\tclearPokemon() {\r\n\t\tfor (const pokemon of this.pokemon) pokemon.destroy();\r\n\t\tthis.pokemon = [];\r\n\t\tfor (let i = 0; i < this.active.length; i++) this.active[i] = null;\r\n\t\tthis.lastPokemon = null;\r\n\t}\r\n\treset() {\r\n\t\tthis.clearPokemon();\r\n\t\tthis.sideConditions = {};\r\n\t}\r\n\tsetAvatar(avatar: string) {\r\n\t\tthis.avatar = avatar;\r\n\t}\r\n\tsetName(name: string, avatar?: string) {\r\n\t\tif (name) this.name = name;\r\n\t\tthis.id = toID(this.name);\r\n\t\tif (avatar) {\r\n\t\t\tthis.setAvatar(avatar);\r\n\t\t} else {\r\n\t\t\tthis.rollTrainerSprites();\r\n\t\t\tif (this.foe && this.avatar === this.foe.avatar) this.rollTrainerSprites();\r\n\t\t}\r\n\t}\r\n\taddSideCondition(effect: Effect) {\r\n\t\tlet condition = effect.id;\r\n\t\tif (this.sideConditions[condition]) {\r\n\t\t\tif (condition === 'spikes' || condition === 'toxicspikes') {\r\n\t\t\t\tthis.sideConditions[condition][1]++;\r\n\t\t\t}\r\n\t\t\tthis.battle.scene.addSideCondition(this.n, condition);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// Side conditions work as: [effectName, levels, minDuration, maxDuration]\r\n\t\tswitch (condition) {\r\n\t\tcase 'auroraveil':\r\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 5, 8];\r\n\t\t\tbreak;\r\n\t\tcase 'reflect':\r\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 5, this.battle.gen >= 4 ? 8 : 0];\r\n\t\t\tbreak;\r\n\t\tcase 'safeguard':\r\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 5, 0];\r\n\t\t\tbreak;\r\n\t\tcase 'lightscreen':\r\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 5, this.battle.gen >= 4 ? 8 : 0];\r\n\t\t\tbreak;\r\n\t\tcase 'mist':\r\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 5, 0];\r\n\t\t\tbreak;\r\n\t\tcase 'tailwind':\r\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, this.battle.gen >= 5 ? 4 : 3, 0];\r\n\t\t\tbreak;\r\n\t\tcase 'luckychant':\r\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 5, 0];\r\n\t\t\tbreak;\r\n\t\tcase 'stealthrock':\r\n\t\tcase 'spikes':\r\n\t\tcase 'toxicspikes':\r\n\t\tcase 'stickyweb':\r\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 0, 0];\r\n\t\t\tbreak;\r\n\t\tcase 'gmaxwildfire':\r\n\t\tcase 'gmaxvolcalith':\r\n\t\tcase 'gmaxvinelash':\r\n\t\tcase 'gmaxcannonade':\r\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 4, 0];\r\n\t\t\tbreak;\r\n\t\tcase 'grasspledge':\r\n\t\t\tthis.sideConditions[condition] = ['Swamp', 1, 4, 0];\r\n\t\t\tbreak;\r\n\t\tcase 'waterpledge':\r\n\t\t\tthis.sideConditions[condition] = ['Rainbow', 1, 4, 0];\r\n\t\t\tbreak;\r\n\t\tcase 'firepledge':\r\n\t\t\tthis.sideConditions[condition] = ['Sea of Fire', 1, 4, 0];\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 0, 0];\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tthis.battle.scene.addSideCondition(this.n, condition);\r\n\t}\r\n\tremoveSideCondition(condition: string) {\r\n\t\tconst id = toID(condition);\r\n\t\tif (!this.sideConditions[id]) return;\r\n\t\tdelete this.sideConditions[id];\r\n\t\tthis.battle.scene.removeSideCondition(this.n, id);\r\n\t}\r\n\taddPokemon(name: string, ident: string, details: string, replaceSlot = -1) {\r\n\t\tconst oldItem = replaceSlot >= 0 ? this.pokemon[replaceSlot].item : undefined;\r\n\r\n\t\tconst data = this.battle.parseDetails(name, ident, details);\r\n\t\tconst poke = new Pokemon(data, this);\r\n\t\tif (oldItem) poke.item = oldItem;\r\n\r\n\t\tif (!poke.ability && poke.baseAbility) poke.ability = poke.baseAbility;\r\n\t\tpoke.reset();\r\n\r\n\t\tif (replaceSlot >= 0) {\r\n\t\t\tthis.pokemon[replaceSlot] = poke;\r\n\t\t} else {\r\n\t\t\tthis.pokemon.push(poke);\r\n\t\t}\r\n\t\tif (this.pokemon.length > this.totalPokemon || this.battle.speciesClause) {\r\n\t\t\t// check for Illusion\r\n\t\t\tlet existingTable: {[searchid: string]: number} = {};\r\n\t\t\tlet toRemove = -1;\r\n\t\t\tfor (let poke1i = 0; poke1i < this.pokemon.length; poke1i++) {\r\n\t\t\t\tlet poke1 = this.pokemon[poke1i];\r\n\t\t\t\tif (!poke1.searchid) continue;\r\n\t\t\t\tif (poke1.searchid in existingTable) {\r\n\t\t\t\t\tlet poke2i = existingTable[poke1.searchid];\r\n\t\t\t\t\tlet poke2 = this.pokemon[poke2i];\r\n\t\t\t\t\tif (poke === poke1) {\r\n\t\t\t\t\t\ttoRemove = poke2i;\r\n\t\t\t\t\t} else if (poke === poke2) {\r\n\t\t\t\t\t\ttoRemove = poke1i;\r\n\t\t\t\t\t} else if (this.active.indexOf(poke1) >= 0) {\r\n\t\t\t\t\t\ttoRemove = poke2i;\r\n\t\t\t\t\t} else if (this.active.indexOf(poke2) >= 0) {\r\n\t\t\t\t\t\ttoRemove = poke1i;\r\n\t\t\t\t\t} else if (poke1.fainted && !poke2.fainted) {\r\n\t\t\t\t\t\ttoRemove = poke2i;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttoRemove = poke1i;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\texistingTable[poke1.searchid] = poke1i;\r\n\t\t\t}\r\n\t\t\tif (toRemove >= 0) {\r\n\t\t\t\tif (this.pokemon[toRemove].fainted) {\r\n\t\t\t\t\t// A fainted Pokemon was actually a Zoroark\r\n\t\t\t\t\tlet illusionFound = null;\r\n\t\t\t\t\tfor (const curPoke of this.pokemon) {\r\n\t\t\t\t\t\tif (curPoke === poke) continue;\r\n\t\t\t\t\t\tif (curPoke.fainted) continue;\r\n\t\t\t\t\t\tif (this.active.indexOf(curPoke) >= 0) continue;\r\n\t\t\t\t\t\tif (curPoke.speciesForme === 'Zoroark' || curPoke.speciesForme === 'Zorua' || curPoke.ability === 'Illusion') {\r\n\t\t\t\t\t\t\tillusionFound = curPoke;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!illusionFound) {\r\n\t\t\t\t\t\t// This is Hackmons; we'll just guess a random unfainted Pokemon.\r\n\t\t\t\t\t\t// This will keep the fainted Pokemon count correct, and will\r\n\t\t\t\t\t\t// eventually become correct as incorrect guesses are switched in\r\n\t\t\t\t\t\t// and reguessed.\r\n\t\t\t\t\t\tfor (const curPoke of this.pokemon) {\r\n\t\t\t\t\t\t\tif (curPoke === poke) continue;\r\n\t\t\t\t\t\t\tif (curPoke.fainted) continue;\r\n\t\t\t\t\t\t\tif (this.active.indexOf(curPoke) >= 0) continue;\r\n\t\t\t\t\t\t\tillusionFound = curPoke;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (illusionFound) {\r\n\t\t\t\t\t\tillusionFound.fainted = true;\r\n\t\t\t\t\t\tillusionFound.hp = 0;\r\n\t\t\t\t\t\tillusionFound.status = '';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.pokemon.splice(toRemove, 1);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.battle.scene.updateSidebar(this);\r\n\r\n\t\treturn poke;\r\n\t}\r\n\r\n\tswitchIn(pokemon: Pokemon, slot?: number) {\r\n\t\tif (slot === undefined) slot = pokemon.slot;\r\n\t\tthis.active[slot] = pokemon;\r\n\t\tpokemon.slot = slot;\r\n\t\tpokemon.clearVolatile();\r\n\t\tpokemon.lastMove = '';\r\n\t\tthis.battle.lastMove = 'switch-in';\r\n\t\tif (['batonpass', 'zbatonpass'].includes(this.lastPokemon?.lastMove!)) {\r\n\t\t\tpokemon.copyVolatileFrom(this.lastPokemon!);\r\n\t\t}\r\n\r\n\t\tthis.battle.scene.animSummon(pokemon, slot);\r\n\t}\r\n\tdragIn(pokemon: Pokemon, slot = pokemon.slot) {\r\n\t\tlet oldpokemon = this.active[slot];\r\n\t\tif (oldpokemon === pokemon) return;\r\n\t\tthis.lastPokemon = oldpokemon;\r\n\t\tif (oldpokemon) {\r\n\t\t\tthis.battle.scene.animDragOut(oldpokemon);\r\n\t\t\toldpokemon.clearVolatile();\r\n\t\t}\r\n\t\tpokemon.clearVolatile();\r\n\t\tpokemon.lastMove = '';\r\n\t\tthis.battle.lastMove = 'switch-in';\r\n\t\tthis.active[slot] = pokemon;\r\n\t\tpokemon.slot = slot;\r\n\r\n\t\tthis.battle.scene.animDragIn(pokemon, slot);\r\n\t}\r\n\treplace(pokemon: Pokemon, slot = pokemon.slot) {\r\n\t\tlet oldpokemon = this.active[slot];\r\n\t\tif (pokemon === oldpokemon) return;\r\n\t\tthis.lastPokemon = oldpokemon;\r\n\t\tpokemon.clearVolatile();\r\n\t\tif (oldpokemon) {\r\n\t\t\tpokemon.lastMove = oldpokemon.lastMove;\r\n\t\t\tpokemon.hp = oldpokemon.hp;\r\n\t\t\tpokemon.maxhp = oldpokemon.maxhp;\r\n\t\t\tpokemon.hpcolor = oldpokemon.hpcolor;\r\n\t\t\tpokemon.status = oldpokemon.status;\r\n\t\t\tpokemon.copyVolatileFrom(oldpokemon, true);\r\n\t\t\tpokemon.statusData = {...oldpokemon.statusData};\r\n\t\t\t// we don't know anything about the illusioned pokemon except that it's not fainted\r\n\t\t\t// technically we also know its status but only at the end of the turn, not here\r\n\t\t\toldpokemon.fainted = false;\r\n\t\t\toldpokemon.hp = oldpokemon.maxhp;\r\n\t\t\toldpokemon.status = '???';\r\n\t\t}\r\n\t\tthis.active[slot] = pokemon;\r\n\t\tpokemon.slot = slot;\r\n\r\n\t\tif (oldpokemon) {\r\n\t\t\tthis.battle.scene.animUnsummon(oldpokemon, true);\r\n\t\t}\r\n\t\tthis.battle.scene.animSummon(pokemon, slot, true);\r\n\t}\r\n\tswitchOut(pokemon: Pokemon, slot = pokemon.slot) {\r\n\t\tif (pokemon.lastMove !== 'batonpass' && pokemon.lastMove !== 'zbatonpass') {\r\n\t\t\tpokemon.clearVolatile();\r\n\t\t} else {\r\n\t\t\tpokemon.removeVolatile('transform' as ID);\r\n\t\t\tpokemon.removeVolatile('formechange' as ID);\r\n\t\t}\r\n\t\tif (pokemon.lastMove === 'uturn' || pokemon.lastMove === 'voltswitch') {\r\n\t\t\tthis.battle.log(['switchout', pokemon.ident], {from: pokemon.lastMove});\r\n\t\t} else if (pokemon.lastMove !== 'batonpass' && pokemon.lastMove !== 'zbatonpass') {\r\n\t\t\tthis.battle.log(['switchout', pokemon.ident]);\r\n\t\t}\r\n\t\tpokemon.statusData.toxicTurns = 0;\r\n\t\tif (this.battle.gen === 5) pokemon.statusData.sleepTurns = 0;\r\n\t\tthis.lastPokemon = pokemon;\r\n\t\tthis.active[slot] = null;\r\n\r\n\t\tthis.battle.scene.animUnsummon(pokemon);\r\n\t}\r\n\tswapTo(pokemon: Pokemon, slot: number, kwArgs: KWArgs) {\r\n\t\tif (pokemon.slot === slot) return;\r\n\t\tlet target = this.active[slot];\r\n\r\n\t\tlet oslot = pokemon.slot;\r\n\r\n\t\tpokemon.slot = slot;\r\n\t\tif (target) target.slot = oslot;\r\n\r\n\t\tthis.active[slot] = pokemon;\r\n\t\tthis.active[oslot] = target;\r\n\r\n\t\tthis.battle.scene.animUnsummon(pokemon, true);\r\n\t\tif (target) this.battle.scene.animUnsummon(target, true);\r\n\r\n\t\tthis.battle.scene.animSummon(pokemon, slot, true);\r\n\t\tif (target) this.battle.scene.animSummon(target, oslot, true);\r\n\t}\r\n\tswapWith(pokemon: Pokemon, target: Pokemon, kwArgs: KWArgs) {\r\n\t\t// method provided for backwards compatibility only\r\n\t\tif (pokemon === target) return;\r\n\r\n\t\tlet oslot = pokemon.slot;\r\n\t\tlet nslot = target.slot;\r\n\r\n\t\tpokemon.slot = nslot;\r\n\t\ttarget.slot = oslot;\r\n\t\tthis.active[nslot] = pokemon;\r\n\t\tthis.active[oslot] = target;\r\n\r\n\t\tthis.battle.scene.animUnsummon(pokemon, true);\r\n\t\tthis.battle.scene.animUnsummon(target, true);\r\n\r\n\t\tthis.battle.scene.animSummon(pokemon, nslot, true);\r\n\t\tthis.battle.scene.animSummon(target, oslot, true);\r\n\t}\r\n\tfaint(pokemon: Pokemon, slot = pokemon.slot) {\r\n\t\tpokemon.clearVolatile();\r\n\t\tthis.lastPokemon = pokemon;\r\n\t\tthis.active[slot] = null;\r\n\r\n\t\tpokemon.fainted = true;\r\n\t\tpokemon.hp = 0;\r\n\r\n\t\tthis.battle.scene.animFaint(pokemon);\r\n\t}\r\n\tdestroy() {\r\n\t\tthis.clearPokemon();\r\n\t\tthis.battle = null!;\r\n\t\tthis.foe = null!;\r\n\t}\r\n}\r\n\r\ninterface PokemonDetails {\r\n\tdetails: string;\r\n\tname: string;\r\n\tspeciesForme: string;\r\n\tlevel: number;\r\n\tshiny: boolean;\r\n\tgender: GenderName | '';\r\n\tident: string;\r\n\tsearchid: string;\r\n}\r\ninterface PokemonHealth {\r\n\thp: number;\r\n\tmaxhp: number;\r\n\thpcolor: HPColor | '';\r\n\tstatus: StatusName | 'tox' | '' | '???';\r\n\tfainted?: boolean;\r\n}\r\ninterface ServerPokemon extends PokemonDetails, PokemonHealth {\r\n\tident: string;\r\n\tdetails: string;\r\n\tcondition: string;\r\n\tactive: boolean;\r\n\t/** unboosted stats */\r\n\tstats: {\r\n\t\tatk: number,\r\n\t\tdef: number,\r\n\t\tspa: number,\r\n\t\tspd: number,\r\n\t\tspe: number,\r\n\t};\r\n\t/** currently an ID, will revise to name */\r\n\tmoves: string[];\r\n\t/** currently an ID, will revise to name */\r\n\tbaseAbility: string;\r\n\t/** currently an ID, will revise to name */\r\n\tability?: string;\r\n\t/** currently an ID, will revise to name */\r\n\titem: string;\r\n\t/** currently an ID, will revise to name */\r\n\tpokeball: string;\r\n\t/** false if the pokemon cannot gigantamax, otherwise a string containing the full name of its G-max move */\r\n\tgigantamax: string | false;\r\n}\r\n\r\nclass Battle {\r\n\tscene: BattleScene | BattleSceneStub;\r\n\r\n\tsidesSwitched = false;\r\n\r\n\tstepQueue: string[];\r\n\t/** See battle.instantAdd */\r\n\tpreemptStepQueue: string[] = [];\r\n\twaitForAnimations: true | false | 'simult' = true;\r\n\t/** the index of `stepQueue` currently being animated */\r\n\tcurrentStep = 0;\r\n\t/** null = not seeking, 0 = seek start, Infinity = seek end, otherwise: seek turn number */\r\n\tseeking: number | null = null;\r\n\r\n\tactiveMoveIsSpread: string | null = null;\r\n\r\n\tsubscription: ((state:\r\n\t\t'playing' | 'paused' | 'turn' | 'atqueueend' | 'callback' | 'ended' | 'error'\r\n\t) => void) | null;\r\n\r\n\tmute = false;\r\n\tmessageFadeTime = 300;\r\n\tmessageShownTime = 1;\r\n\t/** for tracking when to accelerate animations in long battles full of double switches */\r\n\tturnsSinceMoved = 0;\r\n\r\n\t/**\r\n\t * * `-1` = non-battle RoomGames, or hasn't hit Team Preview or `|start`\r\n\t * * `0` = after Team Preview or `|start` but before `|turn|1`\r\n\t */\r\n\tturn = -1;\r\n\t/**\r\n\t * Are we at the end of the queue and waiting for more input?\r\n\t *\r\n\t * In addition to at the end of a battle, this is also true if you're\r\n\t * playing/watching a battle live, and waiting for a player to make a move.\r\n\t */\r\n\tatQueueEnd = false;\r\n\t/**\r\n\t * Has the battle ever been played or fast-forwarded?\r\n\t *\r\n\t * This is not exactly `turn > 0` because if you start playing a replay,\r\n\t * then pause before turn 1, `turn` will still be 0, but playback should\r\n\t * be considered started (for the purposes of displaying \"Play\" vs \"Resume\")\r\n\t */\r\n\tstarted = false;\r\n\t/**\r\n\t * Has playback gotten to the point where a player has won or tied?\r\n\t * (Affects whether BGM is playing)\r\n\t */\r\n\tended = false;\r\n\tisReplay = false;\r\n\tusesUpkeep = false;\r\n\tweather = '' as ID;\r\n\tpseudoWeather = [] as WeatherState[];\r\n\tweatherTimeLeft = 0;\r\n\tweatherMinTimeLeft = 0;\r\n\t/**\r\n\t * The side from which perspective we're viewing. Should be identical to\r\n\t * `nearSide` except in multi battles, where `nearSide` is always the first\r\n\t * near side, and `mySide` is the active player.\r\n\t */\r\n\tmySide: Side = null!;\r\n\tnearSide: Side = null!;\r\n\tfarSide: Side = null!;\r\n\tp1: Side = null!;\r\n\tp2: Side = null!;\r\n\tp3?: Side = null!;\r\n\tp4?: Side = null!;\r\n\tpokemonControlled = 0;\r\n\tsides: Side[] = null!;\r\n\tmyPokemon: ServerPokemon[] | null = null;\r\n\tmyAllyPokemon: ServerPokemon[] | null = null;\r\n\tlastMove = '';\r\n\r\n\tmod = '' as ID;\r\n\tgen = 8;\r\n\tdex: ModdedDex = Dex;\r\n\tteamPreviewCount = 0;\r\n\tspeciesClause = false;\r\n\ttier = '';\r\n\tgameType: 'singles' | 'doubles' | 'triples' | 'multi' | 'freeforall' = 'singles';\r\n\trated: string | boolean = false;\r\n\tisBlitz = false;\r\n\tendLastTurnPending = false;\r\n\ttotalTimeLeft = 0;\r\n\tgraceTimeLeft = 0;\r\n\t/**\r\n\t * true: timer on, state unknown\r\n\t * false: timer off\r\n\t * number: seconds left this turn\r\n\t */\r\n\tkickingInactive: number | boolean = false;\r\n\r\n\t// options\r\n\tid = '';\r\n\t/** used to forward some information to the room in the old client */\r\n\troomid = '';\r\n\thardcoreMode = false;\r\n\tignoreNicks = !!Dex.prefs('ignorenicks');\r\n\tignoreOpponent = !!Dex.prefs('ignoreopp');\r\n\tignoreSpects = !!Dex.prefs('ignorespects');\r\n\tdebug: boolean;\r\n\tjoinButtons = false;\r\n\r\n\t/**\r\n\t * The actual pause state. Will only be true if playback is actually\r\n\t * paused, not just waiting for the opponent to make a move.\r\n\t */\r\n\tpaused: boolean;\r\n\r\n\tconstructor(options: {\r\n\t\t$frame?: JQuery<HTMLElement>,\r\n\t\t$logFrame?: JQuery<HTMLElement>,\r\n\t\tid?: ID,\r\n\t\tlog?: string[],\r\n\t\tpaused?: boolean,\r\n\t\tisReplay?: boolean,\r\n\t\tdebug?: boolean,\r\n\t\tsubscription?: Battle['subscription'],\r\n\t} = {}) {\r\n\t\tthis.id = options.id || '';\r\n\r\n\t\tif (options.$frame && options.$logFrame) {\r\n\t\t\tthis.scene = new BattleScene(this, options.$frame, options.$logFrame);\r\n\t\t} else if (!options.$frame && !options.$logFrame) {\r\n\t\t\tthis.scene = new BattleSceneStub();\r\n\t\t} else {\r\n\t\t\tthrow new Error(`You must specify $frame and $logFrame simultaneously`);\r\n\t\t}\r\n\r\n\t\tconst format = this.id.slice(this.id.indexOf('-') + 1, this.id.lastIndexOf('-'));\r\n\t\tfor (const mod in window.ModConfig) {\r\n\t\t\tfor (const formatid in window.ModConfig[mod].formats) {\r\n\t\t\t\tif (format === formatid) {\r\n\t\t\t\t\tthis.mod = mod as ID;\r\n\t\t\t\t\tthis.dex = Dex.mod(mod as ID);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.mod) break;\r\n\t\t}\r\n\r\n\t\tthis.paused = !!options.paused;\r\n\t\tthis.started = !this.paused;\r\n\t\tthis.debug = !!options.debug;\r\n\t\tthis.stepQueue = options.log || [];\r\n\t\tthis.subscription = options.subscription || null;\r\n\r\n\t\tthis.p1 = new Side(this, 0);\r\n\t\tthis.p2 = new Side(this, 1);\r\n\t\tthis.sides = [this.p1, this.p2];\r\n\t\tthis.p2.foe = this.p1;\r\n\t\tthis.p1.foe = this.p2;\r\n\t\tthis.nearSide = this.mySide = this.p1;\r\n\t\tthis.farSide = this.p2;\r\n\r\n\t\tthis.resetStep();\r\n\t}\r\n\r\n\tsubscribe(listener: Battle['subscription']) {\r\n\t\tthis.subscription = listener;\r\n\t}\r\n\r\n\tremovePseudoWeather(weather: string) {\r\n\t\tfor (let i = 0; i < this.pseudoWeather.length; i++) {\r\n\t\t\tif (this.pseudoWeather[i][0] === weather) {\r\n\t\t\t\tthis.pseudoWeather.splice(i, 1);\r\n\t\t\t\tthis.scene.updateWeather();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\taddPseudoWeather(weather: string, minTimeLeft: number, timeLeft: number) {\r\n\t\tthis.pseudoWeather.push([weather, minTimeLeft, timeLeft]);\r\n\t\tthis.scene.updateWeather();\r\n\t}\r\n\thasPseudoWeather(weather: string) {\r\n\t\tfor (const [pseudoWeatherName] of this.pseudoWeather) {\r\n\t\t\tif (weather === pseudoWeatherName) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\treset() {\r\n\t\tthis.paused = true;\r\n\t\tthis.scene.pause();\r\n\t\tthis.resetStep();\r\n\t\tthis.subscription?.('paused');\r\n\t}\r\n\tresetStep() {\r\n\t\t// battle state\r\n\t\tthis.turn = -1;\r\n\t\tthis.started = !this.paused;\r\n\t\tthis.ended = false;\r\n\t\tthis.atQueueEnd = false;\r\n\t\tthis.weather = '' as ID;\r\n\t\tthis.weatherTimeLeft = 0;\r\n\t\tthis.weatherMinTimeLeft = 0;\r\n\t\tthis.pseudoWeather = [];\r\n\t\tthis.lastMove = '';\r\n\r\n\t\tfor (const side of this.sides) {\r\n\t\t\tif (side) side.reset();\r\n\t\t}\r\n\t\tthis.myPokemon = null;\r\n\t\tthis.myAllyPokemon = null;\r\n\r\n\t\t// DOM state\r\n\t\tthis.scene.reset();\r\n\r\n\t\t// activity queue state\r\n\t\tthis.activeMoveIsSpread = null;\r\n\t\tthis.currentStep = 0;\r\n\t\tthis.resetTurnsSinceMoved();\r\n\t\tthis.nextStep();\r\n\t}\r\n\tdestroy() {\r\n\t\tthis.scene.destroy();\r\n\r\n\t\tfor (let i = 0; i < this.sides.length; i++) {\r\n\t\t\tif (this.sides[i]) this.sides[i].destroy();\r\n\t\t\tthis.sides[i] = null!;\r\n\t\t}\r\n\t\tthis.mySide = null!;\r\n\t\tthis.nearSide = null!;\r\n\t\tthis.farSide = null!;\r\n\t\tthis.p1 = null!;\r\n\t\tthis.p2 = null!;\r\n\t\tthis.p3 = null!;\r\n\t\tthis.p4 = null!;\r\n\t}\r\n\r\n\tlog(args: Args, kwArgs?: KWArgs, preempt?: boolean) {\r\n\t\tthis.scene.log.add(args, kwArgs, preempt);\r\n\t}\r\n\r\n\tresetToCurrentTurn() {\r\n\t\tthis.seekTurn(this.ended ? Infinity : this.turn, true);\r\n\t}\r\n\tswitchSides() {\r\n\t\tthis.setPerspective(this.sidesSwitched ? 'p1' : 'p2');\r\n\t}\r\n\tsetPerspective(sideid: SideID) {\r\n\t\tif (this.mySide.sideid === sideid) return;\r\n\t\tif (sideid.length !== 2 || !sideid.startsWith('p')) return;\r\n\t\tconst side = this[sideid];\r\n\t\tif (!side) return;\r\n\t\tthis.mySide = side;\r\n\r\n\t\tif ((side.n % 2) === this.p1.n) {\r\n\t\t\tthis.sidesSwitched = false;\r\n\t\t\tthis.nearSide = this.p1;\r\n\t\t\tthis.farSide = this.p2;\r\n\t\t} else {\r\n\t\t\tthis.sidesSwitched = true;\r\n\t\t\tthis.nearSide = this.p2;\r\n\t\t\tthis.farSide = this.p1;\r\n\t\t}\r\n\t\tthis.nearSide.isFar = false;\r\n\t\tthis.farSide.isFar = true;\r\n\t\tif (this.sides.length > 2) {\r\n\t\t\tthis.sides[this.nearSide.n + 2].isFar = false;\r\n\t\t\tthis.sides[this.farSide.n + 2].isFar = true;\r\n\t\t}\r\n\r\n\t\tthis.resetToCurrentTurn();\r\n\t}\r\n\r\n\t//\r\n\t// activities\r\n\t//\r\n\tstart() {\r\n\t\tthis.log(['start']);\r\n\t\tthis.resetTurnsSinceMoved();\r\n\t}\r\n\twinner(winner?: string) {\r\n\t\tthis.log(['win', winner || '']);\r\n\t\tthis.ended = true;\r\n\t\tthis.subscription?.('ended');\r\n\t}\r\n\tprematureEnd() {\r\n\t\tthis.log(['message', 'This replay ends here.']);\r\n\t\tthis.ended = true;\r\n\t\tthis.subscription?.('ended');\r\n\t}\r\n\tendLastTurn() {\r\n\t\tif (this.endLastTurnPending) {\r\n\t\t\tthis.endLastTurnPending = false;\r\n\t\t\tthis.scene.updateStatbars();\r\n\t\t}\r\n\t}\r\n\tsetHardcoreMode(mode: boolean) {\r\n\t\tthis.hardcoreMode = mode;\r\n\t\tthis.scene.updateSidebars();\r\n\t\tthis.scene.updateWeather(true);\r\n\t}\r\n\tsetTurn(turnNum: number) {\r\n\t\tif (turnNum === this.turn + 1) {\r\n\t\t\tthis.endLastTurnPending = true;\r\n\t\t}\r\n\t\tif (this.turn && !this.usesUpkeep) this.updateTurnCounters(); // for compatibility with old replays\r\n\t\tthis.turn = turnNum;\r\n\t\tthis.started = true;\r\n\r\n\t\tif (this.seeking === null) this.turnsSinceMoved++;\r\n\r\n\t\tthis.scene.incrementTurn();\r\n\r\n\t\tif (this.seeking !== null) {\r\n\t\t\tif (turnNum >= this.seeking) {\r\n\t\t\t\tthis.stopSeeking();\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.subscription?.('turn');\r\n\t\t}\r\n\t}\r\n\tresetTurnsSinceMoved() {\r\n\t\tthis.turnsSinceMoved = 0;\r\n\t\tthis.scene.updateAcceleration();\r\n\t}\r\n\tchangeWeather(weatherName: string, poke?: Pokemon, isUpkeep?: boolean, ability?: Effect) {\r\n\t\tlet weather = toID(weatherName);\r\n\t\tif (!weather || weather === 'none') {\r\n\t\t\tweather = '' as ID;\r\n\t\t}\r\n\t\tif (isUpkeep) {\r\n\t\t\tif (this.weather && this.weatherTimeLeft) {\r\n\t\t\t\tthis.weatherTimeLeft--;\r\n\t\t\t\tif (this.weatherMinTimeLeft !== 0) this.weatherMinTimeLeft--;\r\n\t\t\t}\r\n\t\t\tif (this.seeking === null) {\r\n\t\t\t\tthis.scene.upkeepWeather();\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (weather) {\r\n\t\t\tlet isExtremeWeather = (weather === 'deltastream' || weather === 'desolateland' || weather === 'primordialsea');\r\n\t\t\tif (poke) {\r\n\t\t\t\tif (ability) {\r\n\t\t\t\t\tthis.activateAbility(poke, ability.name);\r\n\t\t\t\t}\r\n\t\t\t\tthis.weatherTimeLeft = (this.gen <= 5 || isExtremeWeather) ? 0 : 8;\r\n\t\t\t\tthis.weatherMinTimeLeft = (this.gen <= 5 || isExtremeWeather) ? 0 : 5;\r\n\t\t\t} else if (isExtremeWeather) {\r\n\t\t\t\tthis.weatherTimeLeft = 0;\r\n\t\t\t\tthis.weatherMinTimeLeft = 0;\r\n\t\t\t} else {\r\n\t\t\t\tthis.weatherTimeLeft = (this.gen <= 3 ? 5 : 8);\r\n\t\t\t\tthis.weatherMinTimeLeft = (this.gen <= 3 ? 0 : 5);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.weather = weather;\r\n\t\tthis.scene.updateWeather();\r\n\t}\r\n\tupdateTurnCounters() {\r\n\t\tfor (const pWeather of this.pseudoWeather) {\r\n\t\t\tif (pWeather[1]) pWeather[1]--;\r\n\t\t\tif (pWeather[2]) pWeather[2]--;\r\n\t\t}\r\n\t\tfor (const side of this.sides) {\r\n\t\t\tfor (const id in side.sideConditions) {\r\n\t\t\t\tlet cond = side.sideConditions[id];\r\n\t\t\t\tif (cond[2]) cond[2]--;\r\n\t\t\t\tif (cond[3]) cond[3]--;\r\n\t\t\t}\r\n\t\t\tfor (const poke of side.active) {\r\n\t\t\t\tif (poke) {\r\n\t\t\t\t\tif (poke.status === 'tox') poke.statusData.toxicTurns++;\r\n\t\t\t\t\tpoke.clearTurnstatuses();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.scene.updateWeather();\r\n\t}\r\n\tuseMove(pokemon: Pokemon, move: Move, target: Pokemon | null, kwArgs: KWArgs) {\r\n\t\tlet fromeffect = Dex.getEffect(kwArgs.from);\r\n\t\tthis.activateAbility(pokemon, fromeffect);\r\n\t\tpokemon.clearMovestatuses();\r\n\t\tif (move.id === 'focuspunch') {\r\n\t\t\tpokemon.removeTurnstatus('focuspunch' as ID);\r\n\t\t}\r\n\t\tthis.scene.updateStatbar(pokemon);\r\n\t\tif (fromeffect.id === 'sleeptalk') {\r\n\t\t\tpokemon.rememberMove(move.name, 0);\r\n\t\t} else if (!fromeffect.id || fromeffect.id === 'pursuit') {\r\n\t\t\tlet moveName = move.name;\r\n\t\t\tif (move.isZ) {\r\n\t\t\t\tpokemon.item = move.isZ;\r\n\t\t\t\tlet item = Dex.getItem(move.isZ);\r\n\t\t\t\tif (item.zMoveFrom) moveName = item.zMoveFrom;\r\n\t\t\t} else if (move.name.slice(0, 2) === 'Z-') {\r\n\t\t\t\tmoveName = moveName.slice(2);\r\n\t\t\t\tmove = Dex.getMove(moveName);\r\n\t\t\t\tif (window.BattleItems) {\r\n\t\t\t\t\tfor (let item in BattleItems) {\r\n\t\t\t\t\t\tif (BattleItems[item].zMoveType === move.type) pokemon.item = item;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet pp = 1;\r\n\t\t\tif (move.target === \"all\") {\r\n\t\t\t\tfor (const active of pokemon.side.foe.active) {\r\n\t\t\t\t\tif (active && toID(active.ability) === 'pressure') {\r\n\t\t\t\t\t\tpp += 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (target && target.side !== pokemon.side && toID(target.ability) === 'pressure') {\r\n\t\t\t\tpp += 1;\r\n\t\t\t}\r\n\t\t\tpokemon.rememberMove(moveName, pp);\r\n\t\t}\r\n\t\tpokemon.lastMove = move.id;\r\n\t\tthis.lastMove = move.id;\r\n\t\tif (move.id === 'wish' || move.id === 'healingwish') {\r\n\t\t\tpokemon.side.wisher = pokemon;\r\n\t\t}\r\n\t}\r\n\tanimateMove(pokemon: Pokemon, move: Move, target: Pokemon | null, kwArgs: KWArgs) {\r\n\t\tthis.activeMoveIsSpread = kwArgs.spread;\r\n\t\tif (this.seeking !== null || kwArgs.still) return;\r\n\r\n\t\tif (!target) target = pokemon.side.foe.active[0];\r\n\t\tif (!target) target = pokemon.side.foe.missedPokemon;\r\n\t\tif (kwArgs.miss && target.side) {\r\n\t\t\ttarget = target.side.missedPokemon;\r\n\t\t}\r\n\t\tif (kwArgs.notarget) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (kwArgs.prepare || kwArgs.anim === 'prepare') {\r\n\t\t\tthis.scene.runPrepareAnim(move.id, pokemon, target);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet usedMove = kwArgs.anim ? Dex.getMove(kwArgs.anim) : move;\r\n\t\tif (!kwArgs.spread) {\r\n\t\t\tthis.scene.runMoveAnim(usedMove.id, [pokemon, target]);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet targets = [pokemon];\r\n\t\tif (kwArgs.spread === '.') {\r\n\t\t\t//  no target was hit by the attack\r\n\t\t\ttargets.push(target.side.missedPokemon);\r\n\t\t} else {\r\n\t\t\tfor (const hitTarget of kwArgs.spread.split(',')) {\r\n\t\t\t\tconst curTarget = this.getPokemon(hitTarget + ': ?');\r\n\t\t\t\tif (!curTarget) {\r\n\t\t\t\t\tthis.log(['error', `Invalid spread move target: \"${hitTarget}\"`]);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\ttargets.push(curTarget);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.scene.runMoveAnim(usedMove.id, targets);\r\n\t}\r\n\tcantUseMove(pokemon: Pokemon, effect: Effect, move: Move, kwArgs: KWArgs) {\r\n\t\tpokemon.clearMovestatuses();\r\n\t\tthis.scene.updateStatbar(pokemon);\r\n\t\tif (effect.id in BattleStatusAnims) {\r\n\t\t\tthis.scene.runStatusAnim(effect.id, [pokemon]);\r\n\t\t}\r\n\t\tthis.activateAbility(pokemon, effect);\r\n\t\tif (move.id) pokemon.rememberMove(move.name, 0);\r\n\t\tswitch (effect.id) {\r\n\t\tcase 'par':\r\n\t\t\tthis.scene.resultAnim(pokemon, 'Paralyzed', 'par');\r\n\t\t\tbreak;\r\n\t\tcase 'frz':\r\n\t\t\tthis.scene.resultAnim(pokemon, 'Frozen', 'frz');\r\n\t\t\tbreak;\r\n\t\tcase 'slp':\r\n\t\t\tthis.scene.resultAnim(pokemon, 'Asleep', 'slp');\r\n\t\t\tpokemon.statusData.sleepTurns++;\r\n\t\t\tbreak;\r\n\t\tcase 'truant':\r\n\t\t\tthis.scene.resultAnim(pokemon, 'Loafing around', 'neutral');\r\n\t\t\tbreak;\r\n\t\tcase 'recharge':\r\n\t\t\tthis.scene.runOtherAnim('selfstatus' as ID, [pokemon]);\r\n\t\t\tthis.scene.resultAnim(pokemon, 'Must recharge', 'neutral');\r\n\t\t\tbreak;\r\n\t\tcase 'focuspunch':\r\n\t\t\tthis.scene.resultAnim(pokemon, 'Lost focus', 'neutral');\r\n\t\t\tpokemon.removeTurnstatus('focuspunch' as ID);\r\n\t\t\tbreak;\r\n\t\tcase 'shelltrap':\r\n\t\t\tthis.scene.resultAnim(pokemon, 'Trap failed', 'neutral');\r\n\t\t\tpokemon.removeTurnstatus('shelltrap' as ID);\r\n\t\t\tbreak;\r\n\t\tcase 'flinch':\r\n\t\t\tthis.scene.resultAnim(pokemon, 'Flinched', 'neutral');\r\n\t\t\tpokemon.removeTurnstatus('focuspunch' as ID);\r\n\t\t\tbreak;\r\n\t\tcase 'attract':\r\n\t\t\tthis.scene.resultAnim(pokemon, 'Immobilized', 'neutral');\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tthis.scene.animReset(pokemon);\r\n\t}\r\n\r\n\tactivateAbility(pokemon: Pokemon | null, effectOrName: Effect | string, isNotBase?: boolean) {\r\n\t\tif (!pokemon || !effectOrName) return;\r\n\t\tif (typeof effectOrName !== 'string') {\r\n\t\t\tif (effectOrName.effectType !== 'Ability') return;\r\n\t\t\teffectOrName = effectOrName.name;\r\n\t\t}\r\n\t\tthis.scene.abilityActivateAnim(pokemon, effectOrName);\r\n\t\tpokemon.rememberAbility(effectOrName, isNotBase);\r\n\t}\r\n\r\n\trunMinor(args: Args, kwArgs: KWArgs, nextArgs?: Args, nextKwargs?: KWArgs) {\r\n\t\tif (nextArgs && nextKwargs) {\r\n\t\t\tif (args[2] === 'Sturdy' && args[0] === '-activate') {\r\n\t\t\t\targs[2] = 'ability: Sturdy';\r\n\t\t\t}\r\n\t\t\tif (['-crit', '-supereffective', '-resisted'].includes(args[0]) || args[2] === 'ability: Sturdy') {\r\n\t\t\t\tkwArgs.then = '.';\r\n\t\t\t}\r\n\t\t\tif (args[0] === '-damage' && !kwArgs.from && args[1] !== nextArgs[1] && (\r\n\t\t\t\t['-crit', '-supereffective', '-resisted'].includes(nextArgs[0]) ||\r\n\t\t\t\t(nextArgs[0] === '-damage' && !nextKwargs.from)\r\n\t\t\t)) {\r\n\t\t\t\tkwArgs.then = '.';\r\n\t\t\t}\r\n\t\t\tif (args[0] === '-damage' && nextArgs[0] === '-damage' && kwArgs.from && kwArgs.from === nextKwargs.from) {\r\n\t\t\t\tkwArgs.then = '.';\r\n\t\t\t}\r\n\t\t\tif (args[0] === '-ability' && (args[2] === 'Intimidate' || args[3] === 'boost')) {\r\n\t\t\t\tkwArgs.then = '.';\r\n\t\t\t}\r\n\t\t\tif (args[0] === '-unboost' && nextArgs[0] === '-unboost') {\r\n\t\t\t\tkwArgs.then = '.';\r\n\t\t\t}\r\n\t\t\tif (args[0] === '-boost' && nextArgs[0] === '-boost') {\r\n\t\t\t\tkwArgs.then = '.';\r\n\t\t\t}\r\n\t\t\tif (args[0] === '-damage' && kwArgs.from === 'Leech Seed' && nextArgs[0] === '-heal' && nextKwargs.silent) {\r\n\t\t\t\tkwArgs.then = '.';\r\n\t\t\t}\r\n\t\t\tif (args[0] === 'detailschange' && nextArgs[0] === '-mega') {\r\n\t\t\t\tif (this.scene.closeMessagebar()) {\r\n\t\t\t\t\tthis.currentStep--;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tkwArgs.simult = '.';\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (kwArgs.then) this.waitForAnimations = false;\r\n\t\tif (kwArgs.simult) this.waitForAnimations = 'simult';\r\n\r\n\t\tconst CONSUMED = ['eaten', 'popped', 'consumed', 'held up'];\r\n\t\tswitch (args[0]) {\r\n\t\tcase '-damage': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet damage = poke.healthParse(args[2], true);\r\n\t\t\tif (damage === null) break;\r\n\t\t\tlet range = poke.getDamageRange(damage);\r\n\r\n\t\t\tif (kwArgs.from) {\r\n\t\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\t\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\r\n\t\t\t\tthis.activateAbility(ofpoke, effect);\r\n\t\t\t\tif (effect.effectType === 'Item') {\r\n\t\t\t\t\tconst itemPoke = ofpoke || poke;\r\n\t\t\t\t\tif (itemPoke.prevItem !== effect.name && !CONSUMED.includes(itemPoke.prevItemEffect)) {\r\n\t\t\t\t\t\titemPoke.item = effect.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tswitch (effect.id) {\r\n\t\t\t\tcase 'brn':\r\n\t\t\t\t\tthis.scene.runStatusAnim('brn' as ID, [poke]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'psn':\r\n\t\t\t\t\tthis.scene.runStatusAnim('psn' as ID, [poke]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'baddreams':\r\n\t\t\t\t\tthis.scene.runStatusAnim('cursed' as ID, [poke]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'curse':\r\n\t\t\t\t\tthis.scene.runStatusAnim('cursed' as ID, [poke]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'confusion':\r\n\t\t\t\t\tthis.scene.runStatusAnim('confusedselfhit' as ID, [poke]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'leechseed':\r\n\t\t\t\t\tthis.scene.runOtherAnim('leech' as ID, [ofpoke!, poke]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'bind':\r\n\t\t\t\tcase 'wrap':\r\n\t\t\t\t\tthis.scene.runOtherAnim('bound' as ID, [poke]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tlet damageinfo = '' + Pokemon.getFormattedRange(range, damage[1] === 100 ? 0 : 1, '\\u2013');\r\n\t\t\t\tif (damage[1] !== 100) {\r\n\t\t\t\t\tlet hover = '' + ((damage[0] < 0) ? '\\u2212' : '') +\r\n\t\t\t\t\t\tMath.abs(damage[0]) + '/' + damage[1];\r\n\t\t\t\t\tif (damage[1] === 48) { // this is a hack\r\n\t\t\t\t\t\thover += ' pixels';\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// battle-log will convert this into <abbr>\r\n\t\t\t\t\tdamageinfo = '||' + hover + '||' + damageinfo + '||';\r\n\t\t\t\t}\r\n\t\t\t\targs[3] = damageinfo;\r\n\t\t\t}\r\n\t\t\tthis.scene.damageAnim(poke, Pokemon.getFormattedRange(range, 0, ' to '));\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-heal': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet damage = poke.healthParse(args[2], true, true);\r\n\t\t\tif (damage === null) break;\r\n\t\t\tlet range = poke.getDamageRange(damage);\r\n\r\n\t\t\tif (kwArgs.from) {\r\n\t\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\t\t\t\tthis.activateAbility(poke, effect);\r\n\t\t\t\tif (effect.effectType === 'Item' && !CONSUMED.includes(poke.prevItemEffect)) {\r\n\t\t\t\t\tif (poke.prevItem !== effect.name) {\r\n\t\t\t\t\t\tpoke.item = effect.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tswitch (effect.id) {\r\n\t\t\t\tcase 'lunardance':\r\n\t\t\t\t\tfor (let trackedMove of poke.moveTrack) {\r\n\t\t\t\t\t\ttrackedMove[1] = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// falls through\r\n\t\t\t\tcase 'healingwish':\r\n\t\t\t\t\tthis.lastMove = 'healing-wish';\r\n\t\t\t\t\tthis.scene.runResidualAnim('healingwish' as ID, poke);\r\n\t\t\t\t\tpoke.side.wisher = null;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'wish':\r\n\t\t\t\t\tthis.scene.runResidualAnim('wish' as ID, poke);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.scene.runOtherAnim('heal' as ID, [poke]);\r\n\t\t\tthis.scene.healAnim(poke, Pokemon.getFormattedRange(range, 0, ' to '));\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-sethp': {\r\n\t\t\tfor (let k = 0; k < 2; k++) {\r\n\t\t\t\tlet cpoke = this.getPokemon(args[1 + 2 * k]);\r\n\t\t\t\tif (cpoke) {\r\n\t\t\t\t\tlet damage = cpoke.healthParse(args[2 + 2 * k])!;\r\n\t\t\t\t\tlet range = cpoke.getDamageRange(damage);\r\n\t\t\t\t\tlet formattedRange = Pokemon.getFormattedRange(range, 0, ' to ');\r\n\t\t\t\t\tlet diff = damage[0];\r\n\t\t\t\t\tif (diff > 0) {\r\n\t\t\t\t\t\tthis.scene.healAnim(cpoke, formattedRange);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.scene.damageAnim(cpoke, formattedRange);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-boost': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet stat = args[2] as BoostStatName;\r\n\t\t\tif (this.gen === 1 && stat === 'spd') break;\r\n\t\t\tif (this.gen === 1 && stat === 'spa') stat = 'spc';\r\n\t\t\tlet amount = parseInt(args[3], 10);\r\n\t\t\tif (amount === 0) {\r\n\t\t\t\tthis.scene.resultAnim(poke, 'already ' + poke.getBoost(stat), 'neutral');\r\n\t\t\t\tthis.log(args, kwArgs);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (!poke.boosts[stat]) {\r\n\t\t\t\tpoke.boosts[stat] = 0;\r\n\t\t\t}\r\n\t\t\tpoke.boosts[stat] += amount;\r\n\r\n\t\t\tif (!kwArgs.silent && kwArgs.from) {\r\n\t\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\t\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\r\n\t\t\t\tif (!(effect.id === 'weakarmor' && stat === 'spe')) {\r\n\t\t\t\t\tthis.activateAbility(ofpoke || poke, effect);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.scene.resultAnim(poke, poke.getBoost(stat), 'good');\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-unboost': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet stat = args[2] as BoostStatName;\r\n\t\t\tif (this.gen === 1 && stat === 'spd') break;\r\n\t\t\tif (this.gen === 1 && stat === 'spa') stat = 'spc';\r\n\t\t\tlet amount = parseInt(args[3], 10);\r\n\t\t\tif (amount === 0) {\r\n\t\t\t\tthis.scene.resultAnim(poke, 'already ' + poke.getBoost(stat), 'neutral');\r\n\t\t\t\tthis.log(args, kwArgs);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (!poke.boosts[stat]) {\r\n\t\t\t\tpoke.boosts[stat] = 0;\r\n\t\t\t}\r\n\t\t\tpoke.boosts[stat] -= amount;\r\n\r\n\t\t\tif (!kwArgs.silent && kwArgs.from) {\r\n\t\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\t\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\r\n\t\t\t\tthis.activateAbility(ofpoke || poke, effect);\r\n\t\t\t}\r\n\t\t\tthis.scene.resultAnim(poke, poke.getBoost(stat), 'bad');\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-setboost': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet stat = args[2] as BoostStatName;\r\n\t\t\tlet amount = parseInt(args[3], 10);\r\n\t\t\tpoke.boosts[stat] = amount;\r\n\t\t\tthis.scene.resultAnim(poke, poke.getBoost(stat), (amount > 0 ? 'good' : 'bad'));\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-swapboost': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet poke2 = this.getPokemon(args[2])!;\r\n\t\t\tlet stats = args[3] ? args[3].split(', ') : ['atk', 'def', 'spa', 'spd', 'spe', 'accuracy', 'evasion'];\r\n\t\t\tfor (const stat of stats) {\r\n\t\t\t\tlet tmp = poke.boosts[stat];\r\n\t\t\t\tpoke.boosts[stat] = poke2.boosts[stat];\r\n\t\t\t\tif (!poke.boosts[stat]) delete poke.boosts[stat];\r\n\t\t\t\tpoke2.boosts[stat] = tmp;\r\n\t\t\t\tif (!poke2.boosts[stat]) delete poke2.boosts[stat];\r\n\t\t\t}\r\n\t\t\tthis.scene.resultAnim(poke, 'Stats swapped', 'neutral');\r\n\t\t\tthis.scene.resultAnim(poke2, 'Stats swapped', 'neutral');\r\n\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-clearpositiveboost': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet ofpoke = this.getPokemon(args[2]);\r\n\t\t\tlet effect = Dex.getEffect(args[3]);\r\n\t\t\tfor (const stat in poke.boosts) {\r\n\t\t\t\tif (poke.boosts[stat] > 0) delete poke.boosts[stat];\r\n\t\t\t}\r\n\t\t\tthis.scene.resultAnim(poke, 'Boosts lost', 'bad');\r\n\r\n\t\t\tif (effect.id) {\r\n\t\t\t\tswitch (effect.id) {\r\n\t\t\t\tcase 'spectralthief':\r\n\t\t\t\t\t// todo: update StealBoosts so it animates 1st on Spectral Thief\r\n\t\t\t\t\tthis.scene.runOtherAnim('spectralthiefboost' as ID, [ofpoke!, poke]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-clearnegativeboost': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tfor (const stat in poke.boosts) {\r\n\t\t\t\tif (poke.boosts[stat] < 0) delete poke.boosts[stat];\r\n\t\t\t}\r\n\t\t\tthis.scene.resultAnim(poke, 'Restored', 'good');\r\n\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-copyboost': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet frompoke = this.getPokemon(args[2])!;\r\n\t\t\tlet stats = args[3] ? args[3].split(', ') : ['atk', 'def', 'spa', 'spd', 'spe', 'accuracy', 'evasion'];\r\n\t\t\tfor (const stat of stats) {\r\n\t\t\t\tpoke.boosts[stat] = frompoke.boosts[stat];\r\n\t\t\t\tif (!poke.boosts[stat]) delete poke.boosts[stat];\r\n\t\t\t}\r\n\t\t\tif (this.gen >= 6) {\r\n\t\t\t\tconst volatilesToCopy = ['focusenergy', 'laserfocus'];\r\n\t\t\t\tfor (const volatile of volatilesToCopy) {\r\n\t\t\t\t\tif (frompoke.volatiles[volatile]) {\r\n\t\t\t\t\t\tpoke.addVolatile(volatile as ID);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpoke.removeVolatile(volatile as ID);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.scene.resultAnim(poke, 'Stats copied', 'neutral');\r\n\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-clearboost': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tpoke.boosts = {};\r\n\t\t\tif (!kwArgs.silent && kwArgs.from) {\r\n\t\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\t\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\r\n\t\t\t\tthis.activateAbility(ofpoke || poke, effect);\r\n\t\t\t}\r\n\t\t\tthis.scene.resultAnim(poke, 'Stats reset', 'neutral');\r\n\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-invertboost': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tfor (const stat in poke.boosts) {\r\n\t\t\t\tpoke.boosts[stat] = -poke.boosts[stat];\r\n\t\t\t}\r\n\t\t\tthis.scene.resultAnim(poke, 'Stats inverted', 'neutral');\r\n\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-clearallboost': {\r\n\t\t\tlet timeOffset = this.scene.timeOffset;\r\n\t\t\tfor (const side of this.sides) {\r\n\t\t\t\tfor (const active of side.active) {\r\n\t\t\t\t\tif (active) {\r\n\t\t\t\t\t\tactive.boosts = {};\r\n\t\t\t\t\t\tthis.scene.timeOffset = timeOffset;\r\n\t\t\t\t\t\tthis.scene.resultAnim(active, 'Stats reset', 'neutral');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-crit': {\r\n\t\t\tlet poke = this.getPokemon(args[1]);\r\n\t\t\tif (poke) this.scene.resultAnim(poke, 'Critical hit', 'bad');\r\n\t\t\tif (this.activeMoveIsSpread) kwArgs.spread = '.';\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-supereffective': {\r\n\t\t\tlet poke = this.getPokemon(args[1]);\r\n\t\t\tif (poke) {\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Super-effective', 'bad');\r\n\t\t\t\tif (window.Config?.server?.afd) {\r\n\t\t\t\t\tthis.scene.runOtherAnim('hitmark' as ID, [poke]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.activeMoveIsSpread) kwArgs.spread = '.';\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-resisted': {\r\n\t\t\tlet poke = this.getPokemon(args[1]);\r\n\t\t\tif (poke) this.scene.resultAnim(poke, 'Resisted', 'neutral');\r\n\t\t\tif (this.activeMoveIsSpread) kwArgs.spread = '.';\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-immune': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet fromeffect = Dex.getEffect(kwArgs.from);\r\n\t\t\tthis.activateAbility(this.getPokemon(kwArgs.of) || poke, fromeffect);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tthis.scene.resultAnim(poke, 'Immune', 'neutral');\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-miss': {\r\n\t\t\tlet target = this.getPokemon(args[2]);\r\n\t\t\tif (target) {\r\n\t\t\t\tthis.scene.resultAnim(target, 'Missed', 'neutral');\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-fail': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet effect = Dex.getEffect(args[2]);\r\n\t\t\tlet fromeffect = Dex.getEffect(kwArgs.from);\r\n\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\r\n\t\t\tthis.activateAbility(ofpoke || poke, fromeffect);\r\n\t\t\tswitch (effect.id) {\r\n\t\t\tcase 'brn':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Already burned', 'neutral');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'tox':\r\n\t\t\tcase 'psn':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Already poisoned', 'neutral');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'slp':\r\n\t\t\t\tif (fromeffect.id === 'uproar') {\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Failed', 'neutral');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Already asleep', 'neutral');\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'par':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Already paralyzed', 'neutral');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'frz':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Already frozen', 'neutral');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'unboost':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Stat drop blocked', 'neutral');\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tif (poke) {\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Failed', 'neutral');\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.scene.animReset(poke);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-block': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\r\n\t\t\tlet effect = Dex.getEffect(args[2]);\r\n\t\t\tthis.activateAbility(ofpoke || poke, effect);\r\n\t\t\tswitch (effect.id) {\r\n\t\t\tcase 'quickguard':\r\n\t\t\t\tpoke.addTurnstatus('quickguard' as ID);\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Quick Guard', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'wideguard':\r\n\t\t\t\tpoke.addTurnstatus('wideguard' as ID);\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Wide Guard', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'craftyshield':\r\n\t\t\t\tpoke.addTurnstatus('craftyshield' as ID);\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Crafty Shield', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'protect':\r\n\t\t\t\tpoke.addTurnstatus('protect' as ID);\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Protected', 'good');\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'safetygoggles':\r\n\t\t\t\tpoke.item = 'Safety Goggles';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'protectivepads':\r\n\t\t\t\tpoke.item = 'Protective Pads';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-center': case '-notarget': case '-ohko':\r\n\t\tcase '-combine': case '-hitcount': case '-waiting': case '-zbroken': {\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-zpower': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tthis.scene.runOtherAnim('zpower' as ID, [poke]);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-prepare': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet moveid = toID(args[2]);\r\n\t\t\tlet target = this.getPokemon(args[3]) || poke.side.foe.active[0] || poke;\r\n\t\t\tthis.scene.runPrepareAnim(moveid, poke, target);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-mustrecharge': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tpoke.addMovestatus('mustrecharge' as ID);\r\n\t\t\tthis.scene.updateStatbar(poke);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-status': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\t\t\tlet ofpoke = this.getPokemon(kwArgs.of) || poke;\r\n\t\t\tpoke.status = args[2] as StatusName;\r\n\t\t\tpoke.removeVolatile('yawn' as ID);\r\n\t\t\tthis.activateAbility(ofpoke || poke, effect);\r\n\t\t\tif (effect.effectType === 'Item') {\r\n\t\t\t\tofpoke.item = effect.name;\r\n\t\t\t}\r\n\r\n\t\t\tswitch (args[2]) {\r\n\t\t\tcase 'brn':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Burned', 'brn');\r\n\t\t\t\tthis.scene.runStatusAnim('brn' as ID, [poke]);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'tox':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Toxic poison', 'psn');\r\n\t\t\t\tthis.scene.runStatusAnim('psn' as ID, [poke]);\r\n\t\t\t\tpoke.statusData.toxicTurns = (effect.name === \"Toxic Orb\" ? -1 : 0);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'psn':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Poisoned', 'psn');\r\n\t\t\t\tthis.scene.runStatusAnim('psn' as ID, [poke]);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'slp':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Asleep', 'slp');\r\n\t\t\t\tif (effect.id === 'rest') {\r\n\t\t\t\t\tpoke.statusData.sleepTurns = 0; // for Gen 2 use through Sleep Talk\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'par':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Paralyzed', 'par');\r\n\t\t\t\tthis.scene.runStatusAnim('par' as ID, [poke]);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'frz':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Frozen', 'frz');\r\n\t\t\t\tthis.scene.runStatusAnim('frz' as ID, [poke]);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthis.scene.updateStatbar(poke);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-curestatus': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\r\n\t\t\tif (effect.id) {\r\n\t\t\t\tswitch (effect.id) {\r\n\t\t\t\tcase 'flamewheel':\r\n\t\t\t\tcase 'flareblitz':\r\n\t\t\t\tcase 'fusionflare':\r\n\t\t\t\tcase 'sacredfire':\r\n\t\t\t\tcase 'scald':\r\n\t\t\t\tcase 'steameruption':\r\n\t\t\t\t\tkwArgs.thaw = '.';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (poke) {\r\n\t\t\t\tpoke.status = '';\r\n\t\t\t\tswitch (args[2]) {\r\n\t\t\t\tcase 'brn':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Burn cured', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'tox':\r\n\t\t\t\tcase 'psn':\r\n\t\t\t\t\tpoke.statusData.toxicTurns = 0;\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Poison cured', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'slp':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Woke up', 'good');\r\n\t\t\t\t\tpoke.statusData.sleepTurns = 0;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'par':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Paralysis cured', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'frz':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Thawed', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tpoke.removeVolatile('confusion' as ID);\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Cured', 'good');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\t\tcase '-cureteam': { // For old gens when the whole team was always cured\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tfor (const target of poke.side.pokemon) {\r\n\t\t\t\ttarget.status = '';\r\n\t\t\t\tthis.scene.updateStatbarIfExists(target);\r\n\t\t\t}\r\n\r\n\t\t\tthis.scene.resultAnim(poke, 'Team Cured', 'good');\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-item': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet item = Dex.getItem(args[2]);\r\n\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\r\n\t\t\tpoke.item = item.name;\r\n\t\t\tpoke.itemEffect = '';\r\n\t\t\tpoke.removeVolatile('airballoon' as ID);\r\n\t\t\tif (item.id === 'airballoon') poke.addVolatile('airballoon' as ID);\r\n\r\n\t\t\tif (effect.id) {\r\n\t\t\t\tswitch (effect.id) {\r\n\t\t\t\tcase 'pickup':\r\n\t\t\t\t\tthis.activateAbility(poke, \"Pickup\");\r\n\t\t\t\t\t// falls through\r\n\t\t\t\tcase 'recycle':\r\n\t\t\t\t\tpoke.itemEffect = 'found';\r\n\t\t\t\t\tthis.scene.resultAnim(poke, item.name, 'neutral');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'frisk':\r\n\t\t\t\t\tthis.activateAbility(ofpoke!, \"Frisk\");\r\n\t\t\t\t\tif (poke && poke !== ofpoke) { // used for gen 6\r\n\t\t\t\t\t\tpoke.itemEffect = 'frisked';\r\n\t\t\t\t\t\tthis.scene.resultAnim(poke, item.name, 'neutral');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'magician':\r\n\t\t\t\tcase 'pickpocket':\r\n\t\t\t\t\tthis.activateAbility(poke, effect.name);\r\n\t\t\t\t\t// falls through\r\n\t\t\t\tcase 'thief':\r\n\t\t\t\tcase 'covet':\r\n\t\t\t\t\t// simulate the removal of the item from the ofpoke\r\n\t\t\t\t\tofpoke!.item = '';\r\n\t\t\t\t\tofpoke!.itemEffect = '';\r\n\t\t\t\t\tofpoke!.prevItem = item.name;\r\n\t\t\t\t\tofpoke!.prevItemEffect = 'stolen';\r\n\t\t\t\t\tofpoke!.addVolatile('itemremoved' as ID);\r\n\t\t\t\t\tpoke.itemEffect = 'stolen';\r\n\t\t\t\t\tthis.scene.resultAnim(poke, item.name, 'neutral');\r\n\t\t\t\t\tthis.scene.resultAnim(ofpoke!, 'Item Stolen', 'bad');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'harvest':\r\n\t\t\t\t\tpoke.itemEffect = 'harvested';\r\n\t\t\t\t\tthis.activateAbility(poke, \"Harvest\");\r\n\t\t\t\t\tthis.scene.resultAnim(poke, item.name, 'neutral');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'bestow':\r\n\t\t\t\t\tpoke.itemEffect = 'bestowed';\r\n\t\t\t\t\tthis.scene.resultAnim(poke, item.name, 'neutral');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'switcheroo':\r\n\t\t\t\tcase 'trick':\r\n\t\t\t\t\tpoke.itemEffect = 'tricked';\r\n\t\t\t\t\t// falls through\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tswitch (item.id) {\r\n\t\t\t\tcase 'airballoon':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Balloon', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-enditem': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet item = Dex.getItem(args[2]);\r\n\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\t\t\tpoke.item = '';\r\n\t\t\tpoke.itemEffect = '';\r\n\t\t\tpoke.prevItem = item.name;\r\n\t\t\tpoke.prevItemEffect = '';\r\n\t\t\tpoke.removeVolatile('airballoon' as ID);\r\n\t\t\tpoke.addVolatile('itemremoved' as ID);\r\n\t\t\tif (kwArgs.eat) {\r\n\t\t\t\tpoke.prevItemEffect = 'eaten';\r\n\t\t\t\tthis.scene.runOtherAnim('consume' as ID, [poke]);\r\n\t\t\t\tthis.lastMove = item.id;\r\n\t\t\t} else if (kwArgs.weaken) {\r\n\t\t\t\tpoke.prevItemEffect = 'eaten';\r\n\t\t\t\tthis.lastMove = item.id;\r\n\t\t\t} else if (effect.id) {\r\n\t\t\t\tswitch (effect.id) {\r\n\t\t\t\tcase 'fling':\r\n\t\t\t\t\tpoke.prevItemEffect = 'flung';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'knockoff':\r\n\t\t\t\t\tpoke.prevItemEffect = 'knocked off';\r\n\t\t\t\t\tthis.scene.runOtherAnim('itemoff' as ID, [poke]);\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Item knocked off', 'neutral');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'stealeat':\r\n\t\t\t\t\tpoke.prevItemEffect = 'stolen';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'gem':\r\n\t\t\t\t\tpoke.prevItemEffect = 'consumed';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'incinerate':\r\n\t\t\t\t\tpoke.prevItemEffect = 'incinerated';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tswitch (item.id) {\r\n\t\t\t\tcase 'airballoon':\r\n\t\t\t\t\tpoke.prevItemEffect = 'popped';\r\n\t\t\t\t\tpoke.removeVolatile('airballoon' as ID);\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Balloon popped', 'neutral');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'focussash':\r\n\t\t\t\t\tpoke.prevItemEffect = 'consumed';\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Sash', 'neutral');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'focusband':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Focus Band', 'neutral');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'redcard':\r\n\t\t\t\t\tpoke.prevItemEffect = 'held up';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tpoke.prevItemEffect = 'consumed';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-ability': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet ability = Dex.getAbility(args[2]);\r\n\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\r\n\t\t\tpoke.rememberAbility(ability.name, effect.id && !kwArgs.fail);\r\n\r\n\t\t\tif (kwArgs.silent) {\r\n\t\t\t\t// do nothing\r\n\t\t\t} else if (effect.id) {\r\n\t\t\t\tswitch (effect.id) {\r\n\t\t\t\tcase 'trace':\r\n\t\t\t\t\tthis.activateAbility(poke, \"Trace\");\r\n\t\t\t\t\tthis.scene.wait(500);\r\n\t\t\t\t\tthis.activateAbility(poke, ability.name, true);\r\n\t\t\t\t\tofpoke!.rememberAbility(ability.name);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'powerofalchemy':\r\n\t\t\t\tcase 'receiver':\r\n\t\t\t\t\tthis.activateAbility(poke, effect.name);\r\n\t\t\t\t\tthis.scene.wait(500);\r\n\t\t\t\t\tthis.activateAbility(poke, ability.name, true);\r\n\t\t\t\t\tofpoke!.rememberAbility(ability.name);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'roleplay':\r\n\t\t\t\t\tthis.activateAbility(poke, ability.name, true);\r\n\t\t\t\t\tofpoke!.rememberAbility(ability.name);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'desolateland':\r\n\t\t\t\tcase 'primordialsea':\r\n\t\t\t\tcase 'deltastream':\r\n\t\t\t\t\tif (kwArgs.fail) {\r\n\t\t\t\t\t\tthis.activateAbility(poke, ability.name);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis.activateAbility(poke, ability.name);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.activateAbility(poke, ability.name);\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-endability': {\r\n\t\t\t// deprecated; use |-start| for Gastro Acid\r\n\t\t\t// and the third arg of |-ability| for Entrainment et al\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet ability = Dex.getAbility(args[2]);\r\n\t\t\tpoke.ability = '(suppressed)';\r\n\r\n\t\t\tif (ability.id) {\r\n\t\t\t\tif (!poke.baseAbility) poke.baseAbility = ability.name;\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'detailschange': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tpoke.removeVolatile('formechange' as ID);\r\n\t\t\tpoke.removeVolatile('typeadd' as ID);\r\n\t\t\tpoke.removeVolatile('typechange' as ID);\r\n\r\n\t\t\tlet newSpeciesForme = args[2];\r\n\t\t\tlet commaIndex = newSpeciesForme.indexOf(',');\r\n\t\t\tif (commaIndex !== -1) {\r\n\t\t\t\tlet level = newSpeciesForme.substr(commaIndex + 1).trim();\r\n\t\t\t\tif (level.charAt(0) === 'L') {\r\n\t\t\t\t\tpoke.level = parseInt(level.substr(1), 10);\r\n\t\t\t\t}\r\n\t\t\t\tnewSpeciesForme = args[2].substr(0, commaIndex);\r\n\t\t\t}\r\n\t\t\tlet species = this.dex.getSpecies(newSpeciesForme);\r\n\r\n\t\t\tpoke.speciesForme = newSpeciesForme;\r\n\t\t\tpoke.ability = poke.baseAbility = (species.abilities ? species.abilities['0'] : '');\r\n\r\n\t\t\tpoke.details = args[2];\r\n\t\t\tpoke.searchid = args[1].substr(0, 2) + args[1].substr(3) + '|' + args[2];\r\n\r\n\t\t\tthis.scene.animTransform(poke, true, true);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-transform': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet tpoke = this.getPokemon(args[2])!;\r\n\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\t\t\tif (poke === tpoke) throw new Error(\"Transforming into self\");\r\n\r\n\t\t\tif (!kwArgs.silent) {\r\n\t\t\t\tthis.activateAbility(poke, effect);\r\n\t\t\t}\r\n\r\n\t\t\tpoke.boosts = {...tpoke.boosts};\r\n\t\t\tpoke.copyTypesFrom(tpoke);\r\n\t\t\tpoke.ability = tpoke.ability;\r\n\t\t\tconst speciesForme = (tpoke.volatiles.formechange ? tpoke.volatiles.formechange[1] : tpoke.speciesForme);\r\n\t\t\tconst pokemon = tpoke;\r\n\t\t\tconst shiny = tpoke.shiny;\r\n\t\t\tconst gender = tpoke.gender;\r\n\t\t\tpoke.addVolatile('transform' as ID, pokemon, shiny, gender);\r\n\t\t\tpoke.addVolatile('formechange' as ID, speciesForme);\r\n\t\t\tfor (const trackedMove of tpoke.moveTrack) {\r\n\t\t\t\tpoke.rememberMove(trackedMove[0], 0);\r\n\t\t\t}\r\n\t\t\tthis.scene.animTransform(poke);\r\n\t\t\tthis.scene.resultAnim(poke, 'Transformed', 'good');\r\n\t\t\tthis.log(['-transform', args[1], args[2], tpoke.speciesForme], kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-formechange': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet species = Dex.getSpecies(args[2]);\r\n\t\t\tlet fromeffect = Dex.getEffect(kwArgs.from);\r\n\t\t\tlet isCustomAnim = false;\r\n\t\t\tpoke.removeVolatile('typeadd' as ID);\r\n\t\t\tpoke.removeVolatile('typechange' as ID);\r\n\t\t\tif (this.gen >= 7) poke.removeVolatile('autotomize' as ID);\r\n\r\n\t\t\tif (!kwArgs.silent) {\r\n\t\t\t\tthis.activateAbility(poke, fromeffect);\r\n\t\t\t}\r\n\t\t\tpoke.addVolatile('formechange' as ID, species.name); // the formechange volatile reminds us to revert the sprite change on switch-out\r\n\t\t\tthis.scene.animTransform(poke, isCustomAnim);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-mega': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet item = Dex.getItem(args[3]);\r\n\t\t\tif (args[3]) {\r\n\t\t\t\tpoke.item = item.name;\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-primal': case '-burst': {\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-start': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet effect = Dex.getEffect(args[2]);\r\n\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\r\n\t\t\tlet fromeffect = Dex.getEffect(kwArgs.from);\r\n\r\n\t\t\tthis.activateAbility(poke, effect);\r\n\t\t\tthis.activateAbility(ofpoke || poke, fromeffect);\r\n\t\t\tswitch (effect.id) {\r\n\t\t\tcase 'typechange':\r\n\t\t\t\tif (ofpoke && fromeffect.id === 'reflecttype') {\r\n\t\t\t\t\tpoke.copyTypesFrom(ofpoke);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst types = Dex.sanitizeName(args[3] || '???');\r\n\t\t\t\t\tpoke.removeVolatile('typeadd' as ID);\r\n\t\t\t\t\tpoke.addVolatile('typechange' as ID, types);\r\n\t\t\t\t\tif (!kwArgs.silent) {\r\n\t\t\t\t\t\tthis.scene.typeAnim(poke, types);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.scene.updateStatbar(poke);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'typeadd':\r\n\t\t\t\tconst type = Dex.sanitizeName(args[3]);\r\n\t\t\t\tpoke.addVolatile('typeadd' as ID, type);\r\n\t\t\t\tif (kwArgs.silent) break;\r\n\t\t\t\tthis.scene.typeAnim(poke, type);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dynamax':\r\n\t\t\t\tpoke.addVolatile('dynamax' as ID);\r\n\t\t\t\tthis.scene.animTransform(poke, true);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'powertrick':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Power Trick', 'neutral');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'foresight':\r\n\t\t\tcase 'miracleeye':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Identified', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'telekinesis':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Telekinesis', 'neutral');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'confusion':\r\n\t\t\t\tif (!kwArgs.already) {\r\n\t\t\t\t\tthis.scene.runStatusAnim('confused' as ID, [poke]);\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Confused', 'bad');\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'leechseed':\r\n\t\t\t\tthis.scene.updateStatbar(poke);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'healblock':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Heal Block', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'yawn':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Drowsy', 'slp');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'taunt':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Taunted', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'imprison':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Imprisoning', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'disable':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Disabled', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'embargo':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Embargo', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'torment':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Tormented', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'ingrain':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Ingrained', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'aquaring':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Aqua Ring', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'stockpile1':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Stockpile', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'stockpile2':\r\n\t\t\t\tpoke.removeVolatile('stockpile1' as ID);\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Stockpile&times;2', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'stockpile3':\r\n\t\t\t\tpoke.removeVolatile('stockpile2' as ID);\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Stockpile&times;3', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'perish0':\r\n\t\t\t\tpoke.removeVolatile('perish1' as ID);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'perish1':\r\n\t\t\t\tpoke.removeVolatile('perish2' as ID);\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Perish next turn', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'perish2':\r\n\t\t\t\tpoke.removeVolatile('perish3' as ID);\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Perish in 2', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'perish3':\r\n\t\t\t\tif (!kwArgs.silent) this.scene.resultAnim(poke, 'Perish in 3', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'encore':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Encored', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'bide':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Bide', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'attract':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Attracted', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'autotomize':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Lightened', 'good');\r\n\t\t\t\tif (poke.volatiles.autotomize) {\r\n\t\t\t\t\tpoke.volatiles.autotomize[1]++;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpoke.addVolatile('autotomize' as ID, 1);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'focusenergy':\r\n\t\t\t\tthis.scene.resultAnim(poke, '+Crit rate', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'curse':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Cursed', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'nightmare':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Nightmare', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'magnetrise':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Magnet Rise', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'smackdown':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Smacked Down', 'bad');\r\n\t\t\t\tpoke.removeVolatile('magnetrise' as ID);\r\n\t\t\t\tpoke.removeVolatile('telekinesis' as ID);\r\n\t\t\t\tif (poke.lastMove === 'fly' || poke.lastMove === 'bounce') this.scene.animReset(poke);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'substitute':\r\n\t\t\t\tif (kwArgs.damage) {\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Damage', 'bad');\r\n\t\t\t\t} else if (kwArgs.block) {\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Blocked', 'neutral');\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t// Gen 1\r\n\t\t\tcase 'lightscreen':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Light Screen', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'reflect':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Reflect', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tpoke.addVolatile(effect.id);\r\n\t\t\tthis.scene.updateStatbar(poke);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-end': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet effect = Dex.getEffect(args[2]);\r\n\t\t\tlet fromeffect = Dex.getEffect(kwArgs.from);\r\n\t\t\tpoke.removeVolatile(effect.id);\r\n\r\n\t\t\tif (kwArgs.silent) {\r\n\t\t\t\t// do nothing\r\n\t\t\t} else {\r\n\t\t\t\tswitch (effect.id) {\r\n\t\t\t\tcase 'dynamax':\r\n\t\t\t\t\tthis.scene.animTransform(poke);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'powertrick':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Power Trick', 'neutral');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'telekinesis':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Telekinesis&nbsp;ended', 'neutral');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'skydrop':\r\n\t\t\t\t\tif (kwArgs.interrupt) {\r\n\t\t\t\t\t\tthis.scene.anim(poke, {time: 100});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'confusion':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Confusion&nbsp;ended', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'leechseed':\r\n\t\t\t\t\tif (fromeffect.id === 'rapidspin') {\r\n\t\t\t\t\t\tthis.scene.resultAnim(poke, 'De-seeded', 'good');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'healblock':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Heal Block ended', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'attract':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Attract&nbsp;ended', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'taunt':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Taunt&nbsp;ended', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'disable':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Disable&nbsp;ended', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'embargo':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Embargo ended', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'torment':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Torment&nbsp;ended', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'encore':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Encore&nbsp;ended', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'bide':\r\n\t\t\t\t\tthis.scene.runOtherAnim('bideunleash' as ID, [poke]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'illusion':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Illusion ended', 'bad');\r\n\t\t\t\t\tpoke.rememberAbility('Illusion');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'slowstart':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Slow Start ended', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'perishsong': // for backwards compatibility\r\n\t\t\t\t\tpoke.removeVolatile('perish3' as ID);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'substitute':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Faded', 'bad');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'stockpile':\r\n\t\t\t\t\tpoke.removeVolatile('stockpile1' as ID);\r\n\t\t\t\t\tpoke.removeVolatile('stockpile2' as ID);\r\n\t\t\t\t\tpoke.removeVolatile('stockpile3' as ID);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif (effect.effectType === 'Move') {\r\n\t\t\t\t\t\tif (effect.name === 'Doom Desire') {\r\n\t\t\t\t\t\t\tthis.scene.runOtherAnim('doomdesirehit' as ID, [poke]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (effect.name === 'Future Sight') {\r\n\t\t\t\t\t\t\tthis.scene.runOtherAnim('futuresighthit' as ID, [poke]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.scene.updateStatbar(poke);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-singleturn': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet effect = Dex.getEffect(args[2]);\r\n\t\t\tif (effect.id === 'roost' && !poke.getTypeList().includes('Flying')) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tpoke.addTurnstatus(effect.id);\r\n\t\t\tswitch (effect.id) {\r\n\t\t\tcase 'roost':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Landed', 'neutral');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'quickguard':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Quick Guard', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'wideguard':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Wide Guard', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'craftyshield':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Crafty Shield', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'matblock':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Mat Block', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'protect':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Protected', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'endure':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Enduring', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'helpinghand':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Helping Hand', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'focuspunch':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Focusing', 'neutral');\r\n\t\t\t\tpoke.rememberMove(effect.name, 0);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'shelltrap':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Trap set', 'neutral');\r\n\t\t\t\tpoke.rememberMove(effect.name, 0);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'beakblast':\r\n\t\t\t\tthis.scene.runOtherAnim('bidecharge' as ID, [poke]);\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Beak Blast', 'neutral');\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.scene.updateStatbar(poke);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-singlemove': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet effect = Dex.getEffect(args[2]);\r\n\t\t\tpoke.addMovestatus(effect.id);\r\n\r\n\t\t\tswitch (effect.id) {\r\n\t\t\tcase 'grudge':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Grudge', 'neutral');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'destinybond':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Destiny Bond', 'neutral');\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-activate': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet effect = Dex.getEffect(args[2]);\r\n\t\t\tlet target = this.getPokemon(args[3]);\r\n\t\t\tthis.activateAbility(poke, effect);\r\n\t\t\tswitch (effect.id) {\r\n\t\t\tcase 'poltergeist':\r\n\t\t\t\tpoke.item = kwArgs.item;\r\n\t\t\t\tpoke.itemEffect = 'disturbed';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'grudge':\r\n\t\t\t\tpoke.rememberMove(kwArgs.move, Infinity);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'substitute':\r\n\t\t\t\tif (kwArgs.damage) {\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Damage', 'bad');\r\n\t\t\t\t} else if (kwArgs.block) {\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Blocked', 'neutral');\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'attract':\r\n\t\t\t\tthis.scene.runStatusAnim('attracted' as ID, [poke]);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'bide':\r\n\t\t\t\tthis.scene.runOtherAnim('bidecharge' as ID, [poke]);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t// move activations\r\n\t\t\tcase 'aromatherapy':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Team Cured', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'healbell':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Team Cured', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'brickbreak':\r\n\t\t\t\ttarget!.side.removeSideCondition('Reflect');\r\n\t\t\t\ttarget!.side.removeSideCondition('LightScreen');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'hyperspacefury':\r\n\t\t\tcase 'hyperspacehole':\r\n\t\t\tcase 'phantomforce':\r\n\t\t\tcase 'shadowforce':\r\n\t\t\tcase 'feint':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Protection broken', 'bad');\r\n\t\t\t\tpoke.removeTurnstatus('protect' as ID);\r\n\t\t\t\tfor (const curTarget of poke.side.pokemon) {\r\n\t\t\t\t\tcurTarget.removeTurnstatus('wideguard' as ID);\r\n\t\t\t\t\tcurTarget.removeTurnstatus('quickguard' as ID);\r\n\t\t\t\t\tcurTarget.removeTurnstatus('craftyshield' as ID);\r\n\t\t\t\t\tcurTarget.removeTurnstatus('matblock' as ID);\r\n\t\t\t\t\tthis.scene.updateStatbar(curTarget);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'eeriespell':\r\n\t\t\tcase 'gmaxdepletion':\r\n\t\t\tcase 'spite':\r\n\t\t\t\tlet move = Dex.getMove(kwArgs.move).name;\r\n\t\t\t\tlet pp = Number(kwArgs.number);\r\n\t\t\t\tif (isNaN(pp)) pp = 4;\r\n\t\t\t\tpoke.rememberMove(move, pp);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'gravity':\r\n\t\t\t\tpoke.removeVolatile('magnetrise' as ID);\r\n\t\t\t\tpoke.removeVolatile('telekinesis' as ID);\r\n\t\t\t\tthis.scene.anim(poke, {time: 100});\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'skillswap': case 'wanderingspirit':\r\n\t\t\t\tif (this.gen <= 4) break;\r\n\t\t\t\tlet pokeability = Dex.sanitizeName(kwArgs.ability) || target!.ability;\r\n\t\t\t\tlet targetability = Dex.sanitizeName(kwArgs.ability2) || poke.ability;\r\n\t\t\t\tif (pokeability) {\r\n\t\t\t\t\tpoke.ability = pokeability;\r\n\t\t\t\t\tif (!target!.baseAbility) target!.baseAbility = pokeability;\r\n\t\t\t\t}\r\n\t\t\t\tif (targetability) {\r\n\t\t\t\t\ttarget!.ability = targetability;\r\n\t\t\t\t\tif (!poke.baseAbility) poke.baseAbility = targetability;\r\n\t\t\t\t}\r\n\t\t\t\tif (poke.side !== target!.side) {\r\n\t\t\t\t\tthis.activateAbility(poke, pokeability, true);\r\n\t\t\t\t\tthis.activateAbility(target, targetability, true);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t// ability activations\r\n\t\t\tcase 'forewarn':\r\n\t\t\t\tif (target) {\r\n\t\t\t\t\ttarget.rememberMove(kwArgs.move, 0);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet foeActive = [] as Pokemon[];\r\n\t\t\t\t\tfor (const maybeTarget of poke.side.foe.active) {\r\n\t\t\t\t\t\tif (maybeTarget && !maybeTarget.fainted) foeActive.push(maybeTarget);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (foeActive.length === 1) {\r\n\t\t\t\t\t\tfoeActive[0].rememberMove(kwArgs.move, 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'mummy':\r\n\t\t\t\tif (!kwArgs.ability) break; // if Mummy activated but failed, no ability will have been sent\r\n\t\t\t\tlet ability = Dex.getAbility(kwArgs.ability);\r\n\t\t\t\tthis.activateAbility(target, ability.name);\r\n\t\t\t\tthis.activateAbility(poke, \"Mummy\");\r\n\t\t\t\tthis.scene.wait(700);\r\n\t\t\t\tthis.activateAbility(target, \"Mummy\", true);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t// item activations\r\n\t\t\tcase 'leppaberry':\r\n\t\t\tcase 'mysteryberry':\r\n\t\t\t\tpoke.rememberMove(kwArgs.move, effect.id === 'leppaberry' ? -10 : -5);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'focusband':\r\n\t\t\t\tpoke.item = 'Focus Band';\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tif (kwArgs.broken) { // for custom moves that break protection\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Protection broken', 'bad');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-sidestart': {\r\n\t\t\tlet side = this.getSide(args[1]);\r\n\t\t\tlet effect = Dex.getEffect(args[2]);\r\n\t\t\tside.addSideCondition(effect);\r\n\r\n\t\t\tswitch (effect.id) {\r\n\t\t\tcase 'tailwind':\r\n\t\t\tcase 'auroraveil':\r\n\t\t\tcase 'reflect':\r\n\t\t\tcase 'lightscreen':\r\n\t\t\tcase 'safeguard':\r\n\t\t\tcase 'mist':\r\n\t\t\tcase 'gmaxwildfire':\r\n\t\t\tcase 'gmaxvolcalith':\r\n\t\t\tcase 'gmaxvinelash':\r\n\t\t\tcase 'gmaxcannonade':\r\n\t\t\tcase 'grasspledge':\r\n\t\t\tcase 'firepledge':\r\n\t\t\tcase 'waterpledge':\r\n\t\t\t\tthis.scene.updateWeather();\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-sideend': {\r\n\t\t\tlet side = this.getSide(args[1]);\r\n\t\t\tlet effect = Dex.getEffect(args[2]);\r\n\t\t\t// let from = Dex.getEffect(kwArgs.from);\r\n\t\t\t// let ofpoke = this.getPokemon(kwArgs.of);\r\n\t\t\tside.removeSideCondition(effect.name);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-weather': {\r\n\t\t\tlet effect = Dex.getEffect(args[1]);\r\n\t\t\tlet poke = this.getPokemon(kwArgs.of) || undefined;\r\n\t\t\tlet ability = Dex.getEffect(kwArgs.from);\r\n\t\t\tif (!effect.id || effect.id === 'none') {\r\n\t\t\t\tkwArgs.from = this.weather;\r\n\t\t\t}\r\n\t\t\tthis.changeWeather(effect.name, poke, !!kwArgs.upkeep, ability);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-fieldstart': {\r\n\t\t\tlet effect = Dex.getEffect(args[1]);\r\n\t\t\tlet poke = this.getPokemon(kwArgs.of);\r\n\t\t\tlet fromeffect = Dex.getEffect(kwArgs.from);\r\n\t\t\tthis.activateAbility(poke, fromeffect);\r\n\t\t\tlet maxTimeLeft = 0;\r\n\t\t\tif (effect.id.endsWith('terrain')) {\r\n\t\t\t\tfor (let i = this.pseudoWeather.length - 1; i >= 0; i--) {\r\n\t\t\t\t\tlet pwID = toID(this.pseudoWeather[i][0]);\r\n\t\t\t\t\tif (pwID.endsWith('terrain')) {\r\n\t\t\t\t\t\tthis.pseudoWeather.splice(i, 1);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (this.gen > 6) maxTimeLeft = 8;\r\n\t\t\t}\r\n\t\t\tthis.addPseudoWeather(effect.name, 5, maxTimeLeft);\r\n\r\n\t\t\tswitch (effect.id) {\r\n\t\t\tcase 'gravity':\r\n\t\t\t\tif (this.seeking !== null) break;\r\n\t\t\t\tfor (const side of this.sides) {\r\n\t\t\t\t\tfor (const active of side.active) {\r\n\t\t\t\t\t\tif (active) this.scene.runOtherAnim('gravity' as ID, [active]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-fieldend': {\r\n\t\t\tlet effect = Dex.getEffect(args[1]);\r\n\t\t\t// let poke = this.getPokemon(kwArgs.of);\r\n\t\t\tthis.removePseudoWeather(effect.name);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-fieldactivate': {\r\n\t\t\tlet effect = Dex.getEffect(args[1]);\r\n\t\t\tswitch (effect.id) {\r\n\t\t\tcase 'perishsong':\r\n\t\t\t\tthis.scene.updateStatbars();\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-anim': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet move = Dex.getMove(args[2]);\r\n\t\t\tif (this.checkActive(poke)) return;\r\n\t\t\tlet poke2 = this.getPokemon(args[3]);\r\n\t\t\tthis.scene.beforeMove(poke);\r\n\t\t\tthis.animateMove(poke, move, poke2, kwArgs);\r\n\t\t\tthis.scene.afterMove(poke);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-hint': case '-message': case '-candynamax': {\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tdefault: {\r\n\t\t\tthrow new Error(`Unrecognized minor action: ${args[0]}`);\r\n\t\t\tbreak;\r\n\t\t}}\r\n\t}\r\n\t/*\r\n\tparseSpriteData(name) {\r\n\t\tlet siden = 0,\r\n\t\t\tfoe = false;\r\n\t\twhile (true) {\r\n\t\t\tif (name.substr(0, 6) === 'foeof-') {\r\n\t\t\t\tfoe = true;\r\n\t\t\t\tname = name.substr(6);\r\n\t\t\t} else if (name.substr(0, 9) === 'switched-') name = name.substr(9);\r\n\t\t\telse if (name.substr(0, 9) === 'existing-') name = name.substr(9);\r\n\t\t\telse if (name.substr(0, 4) === 'foe-') {\r\n\t\t\t\tsiden = this.p2.n;\r\n\t\t\t\tname = name.substr(4);\r\n\t\t\t} else if (name.substr(0, 5) === 'ally-') {\r\n\t\t\t\tsiden = this.p1.n;\r\n\t\t\t\tname = name.substr(5);\r\n\t\t\t} else break;\r\n\t\t}\r\n\t\tif (name.substr(name.length - 1) === ')') {\r\n\t\t\tlet parenIndex = name.lastIndexOf('(');\r\n\t\t\tif (parenIndex > 0) {\r\n\t\t\t\tlet species = name.substr(parenIndex + 1);\r\n\t\t\t\tname = species.substr(0, species.length - 1);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (foe) siden = (siden ? 0 : 1);\r\n\r\n\t\tlet data = Dex.getSpecies(name);\r\n\t\treturn data.spriteData[siden];\r\n\t}\r\n\t*/\r\n\t/**\r\n\t * @param name Leave blank for Team Preview\r\n\t * @param pokemonid Leave blank for Team Preview\r\n\t * @param details\r\n\t * @param output\r\n\t */\r\n\tparseDetails(name: string, pokemonid: string, details: string, output: PokemonDetails = {} as any) {\r\n\t\tconst isTeamPreview = !name;\r\n\t\toutput.details = details;\r\n\t\toutput.name = name;\r\n\t\toutput.speciesForme = name;\r\n\t\toutput.level = 100;\r\n\t\toutput.shiny = false;\r\n\t\toutput.gender = '';\r\n\t\toutput.ident = (!isTeamPreview ? pokemonid : '');\r\n\t\toutput.searchid = (!isTeamPreview ? `${pokemonid}|${details}` : '');\r\n\t\tlet splitDetails = details.split(', ');\r\n\t\tif (splitDetails[splitDetails.length - 1] === 'shiny') {\r\n\t\t\toutput.shiny = true;\r\n\t\t\tsplitDetails.pop();\r\n\t\t}\r\n\t\tif (splitDetails[splitDetails.length - 1] === 'M' || splitDetails[splitDetails.length - 1] === 'F') {\r\n\t\t\toutput.gender = splitDetails[splitDetails.length - 1] as GenderName;\r\n\t\t\tsplitDetails.pop();\r\n\t\t}\r\n\t\tif (splitDetails[1]) {\r\n\t\t\toutput.level = parseInt(splitDetails[1].substr(1), 10) || 100;\r\n\t\t}\r\n\t\tif (splitDetails[0]) {\r\n\t\t\toutput.speciesForme = splitDetails[0];\r\n\t\t}\r\n\t\treturn output;\r\n\t}\r\n\tparseHealth(hpstring: string, output: PokemonHealth = {} as any) {\r\n\t\tlet [hp, status] = hpstring.split(' ');\r\n\r\n\t\t// hp parse\r\n\t\toutput.hpcolor = '';\r\n\t\tif (hp === '0' || hp === '0.0') {\r\n\t\t\tif (!output.maxhp) output.maxhp = 100;\r\n\t\t\toutput.hp = 0;\r\n\t\t} else if (hp.indexOf('/') > 0) {\r\n\t\t\tlet [curhp, maxhp] = hp.split('/');\r\n\t\t\tif (isNaN(parseFloat(curhp)) || isNaN(parseFloat(maxhp))) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\toutput.hp = parseFloat(curhp);\r\n\t\t\toutput.maxhp = parseFloat(maxhp);\r\n\t\t\tif (output.hp > output.maxhp) output.hp = output.maxhp;\r\n\t\t\tconst colorchar = maxhp.slice(-1);\r\n\t\t\tif (colorchar === 'y' || colorchar === 'g') {\r\n\t\t\t\toutput.hpcolor = colorchar;\r\n\t\t\t}\r\n\t\t} else if (!isNaN(parseFloat(hp))) {\r\n\t\t\tif (!output.maxhp) output.maxhp = 100;\r\n\t\t\toutput.hp = output.maxhp * parseFloat(hp) / 100;\r\n\t\t}\r\n\r\n\t\t// status parse\r\n\t\tif (!status) {\r\n\t\t\toutput.status = '';\r\n\t\t} else if (status === 'par' || status === 'brn' || status === 'slp' || status === 'frz' || status === 'tox') {\r\n\t\t\toutput.status = status;\r\n\t\t} else if (status === 'psn' && output.status !== 'tox') {\r\n\t\t\toutput.status = status;\r\n\t\t} else if (status === 'fnt') {\r\n\t\t\toutput.hp = 0;\r\n\t\t\toutput.fainted = true;\r\n\t\t}\r\n\t\treturn output;\r\n\t}\r\n\tparsePokemonId(pokemonid: string) {\r\n\t\tlet name = pokemonid;\r\n\r\n\t\tlet siden = -1;\r\n\t\tlet slot = -1; // if there is an explicit slot for this pokemon\r\n\t\tif (/^p[1-9]($|: )/.test(name)) {\r\n\t\t\tsiden = parseInt(name.charAt(1), 10) - 1;\r\n\t\t\tname = name.slice(4);\r\n\t\t} else if (/^p[1-9][a-f]: /.test(name)) {\r\n\t\t\tconst slotChart: {[k: string]: number} = {a: 0, b: 1, c: 2, d: 3, e: 4, f: 5};\r\n\t\t\tsiden = parseInt(name.charAt(1), 10) - 1;\r\n\t\t\tslot = slotChart[name.charAt(2)];\r\n\t\t\tname = name.slice(5);\r\n\t\t\tpokemonid = `p${siden + 1}: ${name}`;\r\n\t\t}\r\n\t\treturn {name, siden, slot, pokemonid};\r\n\t}\r\n\tgetSwitchedPokemon(pokemonid: string, details: string) {\r\n\t\tif (pokemonid === '??') throw new Error(`pokemonid not passed`);\r\n\t\tconst {name, siden, slot, pokemonid: parsedPokemonid} = this.parsePokemonId(pokemonid);\r\n\t\tpokemonid = parsedPokemonid;\r\n\r\n\t\tconst searchid = `${pokemonid}|${details}`;\r\n\t\tconst side = this.sides[siden];\r\n\r\n\t\t// search inactive revealed pokemon\r\n\t\tfor (let i = 0; i < side.pokemon.length; i++) {\r\n\t\t\tlet pokemon = side.pokemon[i];\r\n\t\t\tif (pokemon.fainted) continue;\r\n\t\t\t// already active, can't be switching in\r\n\t\t\tif (side.active.includes(pokemon)) continue;\r\n\t\t\t// just switched out, can't be switching in\r\n\t\t\tif (pokemon === side.lastPokemon && !side.active[slot]) continue;\r\n\r\n\t\t\tif (pokemon.searchid === searchid) {\r\n\t\t\t\t// exact match\r\n\t\t\t\tif (slot >= 0) pokemon.slot = slot;\r\n\t\t\t\treturn pokemon;\r\n\t\t\t}\r\n\t\t\tif (!pokemon.searchid && pokemon.checkDetails(details)) {\r\n\t\t\t\t// switch-in matches Team Preview entry\r\n\t\t\t\tpokemon = side.addPokemon(name, pokemonid, details, i);\r\n\t\t\t\tif (slot >= 0) pokemon.slot = slot;\r\n\t\t\t\treturn pokemon;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// pokemon not found, create a new pokemon object for it\r\n\t\tconst pokemon = side.addPokemon(name, pokemonid, details);\r\n\t\tif (slot >= 0) pokemon.slot = slot;\r\n\t\treturn pokemon;\r\n\t}\r\n\trememberTeamPreviewPokemon(sideid: string, details: string) {\r\n\t\tconst {siden} = this.parsePokemonId(sideid);\r\n\r\n\t\treturn this.sides[siden].addPokemon('', '', details);\r\n\t}\r\n\tfindCorrespondingPokemon(serverPokemon: {ident: string, details: string}) {\r\n\t\tconst {siden} = this.parsePokemonId(serverPokemon.ident);\r\n\t\tconst searchid = `${serverPokemon.ident}|${serverPokemon.details}`;\r\n\t\tfor (const pokemon of this.sides[siden].pokemon) {\r\n\t\t\tif (pokemon.searchid === searchid) {\r\n\t\t\t\treturn pokemon;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\tgetPokemon(pokemonid: string | undefined) {\r\n\t\tif (!pokemonid || pokemonid === '??' || pokemonid === 'null' || pokemonid === 'false') {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tconst {siden, slot, pokemonid: parsedPokemonid} = this.parsePokemonId(pokemonid);\r\n\t\tpokemonid = parsedPokemonid;\r\n\r\n\t\t/** if true, don't match an active pokemon */\r\n\t\tconst isInactive = (slot < 0);\r\n\t\tconst side = this.sides[siden];\r\n\r\n\t\t// search player's pokemon\r\n\t\tif (!isInactive && side.active[slot]) return side.active[slot];\r\n\r\n\t\tfor (const pokemon of side.pokemon) {\r\n\t\t\tif (isInactive && side.active.includes(pokemon)) continue;\r\n\t\t\tif (pokemon.ident === pokemonid) { // name matched, good enough\r\n\t\t\t\tif (slot >= 0) pokemon.slot = slot;\r\n\t\t\t\treturn pokemon;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\tgetSide(sidename: string): Side {\r\n\t\tif (sidename === 'p1' || sidename.startsWith('p1:')) return this.p1;\r\n\t\tif (sidename === 'p2' || sidename.startsWith('p2:')) return this.p2;\r\n\t\tif ((sidename === 'p3' || sidename.startsWith('p3:')) && this.p3) return this.p3;\r\n\t\tif ((sidename === 'p4' || sidename.startsWith('p4:')) && this.p4) return this.p4;\r\n\t\tif (this.nearSide.id === sidename) return this.nearSide;\r\n\t\tif (this.farSide.id === sidename) return this.farSide;\r\n\t\tif (this.nearSide.name === sidename) return this.nearSide;\r\n\t\tif (this.farSide.name === sidename) return this.farSide;\r\n\t\treturn {\r\n\t\t\tname: sidename,\r\n\t\t\tid: sidename.replace(/ /g, ''),\r\n\t\t} as any;\r\n\t}\r\n\r\n\tadd(command?: string) {\r\n\t\tif (command) this.stepQueue.push(command);\r\n\r\n\t\tif (this.atQueueEnd && this.currentStep < this.stepQueue.length) {\r\n\t\t\tthis.atQueueEnd = false;\r\n\t\t\tthis.nextStep();\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * PS's preempt system is intended to show chat messages immediately,\r\n\t * instead of waiting for the battle to get to the point where the\r\n\t * message was said.\r\n\t *\r\n\t * In addition to being a nice quality-of-life feature, it's also\r\n\t * important to make sure timer updates happen in real-time.\r\n\t */\r\n\tinstantAdd(command: string) {\r\n\t\tthis.run(command, true);\r\n\t\tthis.preemptStepQueue.push(command);\r\n\t\tthis.add(command);\r\n\t}\r\n\trunMajor(args: Args, kwArgs: KWArgs, preempt?: boolean) {\r\n\t\tswitch (args[0]) {\r\n\t\tcase 'start': {\r\n\t\t\tthis.nearSide.active[0] = null;\r\n\t\t\tthis.farSide.active[0] = null;\r\n\t\t\tthis.scene.resetSides();\r\n\t\t\tthis.start();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'upkeep': {\r\n\t\t\tthis.usesUpkeep = true;\r\n\t\t\tthis.updateTurnCounters();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'turn': {\r\n\t\t\tthis.setTurn(parseInt(args[1], 10));\r\n\t\t\tthis.log(args);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'tier': {\r\n\t\t\tthis.tier = args[1];\r\n\t\t\tif (this.tier.slice(-13) === 'Random Battle') {\r\n\t\t\t\tthis.speciesClause = true;\r\n\t\t\t}\r\n\t\t\tif (this.tier.slice(-8) === ' (Blitz)') {\r\n\t\t\t\tthis.messageFadeTime = 40;\r\n\t\t\t\tthis.isBlitz = true;\r\n\t\t\t}\r\n\t\t\tthis.log(args);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'gametype': {\r\n\t\t\tthis.gameType = args[1] as any;\r\n\t\t\tswitch (args[1]) {\r\n\t\t\tcase 'multi':\r\n\t\t\tcase 'freeforall':\r\n\t\t\t\tthis.pokemonControlled = 1;\r\n\t\t\t\tthis.p3 = new Side(this, 2);\r\n\t\t\t\tthis.p4 = new Side(this, 3);\r\n\t\t\t\tthis.p3.foe = this.p2;\r\n\t\t\t\tthis.p4.foe = this.p1;\r\n\r\n\t\t\t\tif (args[1] === 'multi') {\r\n\t\t\t\t\tthis.p4.ally = this.p2;\r\n\t\t\t\t\tthis.p3.ally = this.p1;\r\n\t\t\t\t\tthis.p1.ally = this.p3;\r\n\t\t\t\t\tthis.p2.ally = this.p4;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.p3.isFar = this.p1.isFar;\r\n\t\t\t\tthis.p4.isFar = this.p2.isFar;\r\n\t\t\t\tthis.sides = [this.p1, this.p2, this.p3, this.p4];\r\n\t\t\t\t// intentionally sync p1/p3 and p2/p4's active arrays\r\n\t\t\t\tthis.p1.active = this.p3.active = [null, null];\r\n\t\t\t\tthis.p2.active = this.p4.active = [null, null];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'doubles':\r\n\t\t\t\tthis.nearSide.active = [null, null];\r\n\t\t\t\tthis.farSide.active = [null, null];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'triples':\r\n\t\t\tcase 'rotation':\r\n\t\t\t\tthis.nearSide.active = [null, null, null];\r\n\t\t\t\tthis.farSide.active = [null, null, null];\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tfor (const side of this.sides) side.active = [null];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (!this.pokemonControlled) this.pokemonControlled = this.nearSide.active.length;\r\n\t\t\tthis.scene.updateGen();\r\n\t\t\tthis.scene.resetSides();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'rule': {\r\n\t\t\tlet ruleName = args[1].split(': ')[0];\r\n\t\t\tif (ruleName === 'Species Clause') this.speciesClause = true;\r\n\t\t\tif (ruleName === 'Blitz') {\r\n\t\t\t\tthis.messageFadeTime = 40;\r\n\t\t\t\tthis.isBlitz = true;\r\n\t\t\t}\r\n\t\t\tthis.log(args);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'rated': {\r\n\t\t\tthis.rated = args[1] || true;\r\n\t\t\tthis.scene.updateGen();\r\n\t\t\tthis.log(args);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'inactive': {\r\n\t\t\tif (!this.kickingInactive) this.kickingInactive = true;\r\n\t\t\tif (args[1].slice(0, 11) === \"Time left: \") {\r\n\t\t\t\tlet [time, totalTime, graceTime] = args[1].split(' | ');\r\n\t\t\t\tthis.kickingInactive = parseInt(time.slice(11), 10) || true;\r\n\t\t\t\tthis.totalTimeLeft = parseInt(totalTime, 10);\r\n\t\t\t\tthis.graceTimeLeft = parseInt(graceTime || '', 10) || 0;\r\n\t\t\t\tif (this.totalTimeLeft === this.kickingInactive) this.totalTimeLeft = 0;\r\n\t\t\t\treturn;\r\n\t\t\t} else if (args[1].slice(0, 9) === \"You have \") {\r\n\t\t\t\t// this is ugly but parseInt is documented to work this way\r\n\t\t\t\t// so I'm going to be lazy and not chop off the rest of the\r\n\t\t\t\t// sentence\r\n\t\t\t\tthis.kickingInactive = parseInt(args[1].slice(9), 10) || true;\r\n\t\t\t\treturn;\r\n\t\t\t} else if (args[1].slice(-14) === ' seconds left.') {\r\n\t\t\t\tlet hasIndex = args[1].indexOf(' has ');\r\n\t\t\t\tlet userid = window.app?.user?.get('userid');\r\n\t\t\t\tif (toID(args[1].slice(0, hasIndex)) === userid) {\r\n\t\t\t\t\tthis.kickingInactive = parseInt(args[1].slice(hasIndex + 5), 10) || true;\r\n\t\t\t\t}\r\n\t\t\t} else if (args[1].slice(-27) === ' 15 seconds left this turn.') {\r\n\t\t\t\tif (this.isBlitz) return;\r\n\t\t\t}\r\n\t\t\tthis.log(args, undefined, preempt);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'inactiveoff': {\r\n\t\t\tthis.kickingInactive = false;\r\n\t\t\tthis.log(args, undefined, preempt);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'join': case 'j': case 'J': {\r\n\t\t\tif (this.roomid) {\r\n\t\t\t\tlet room = app!.rooms[this.roomid];\r\n\t\t\t\tlet user = BattleTextParser.parseNameParts(args[1]);\r\n\t\t\t\tlet userid = toUserid(user.name);\r\n\t\t\t\tif (!room.users[userid]) room.userCount.users++;\r\n\t\t\t\troom.users[userid] = user;\r\n\t\t\t\troom.userList.add(userid);\r\n\t\t\t\troom.userList.updateUserCount();\r\n\t\t\t\troom.userList.updateNoUsersOnline();\r\n\t\t\t}\r\n\t\t\tthis.log(args, undefined, preempt);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'leave': case 'l': case 'L': {\r\n\t\t\tif (this.roomid) {\r\n\t\t\t\tlet room = app!.rooms[this.roomid];\r\n\t\t\t\tlet user = args[1];\r\n\t\t\t\tlet userid = toUserid(user);\r\n\t\t\t\tif (room.users[userid]) room.userCount.users--;\r\n\t\t\t\tdelete room.users[userid];\r\n\t\t\t\troom.userList.remove(userid);\r\n\t\t\t\troom.userList.updateUserCount();\r\n\t\t\t\troom.userList.updateNoUsersOnline();\r\n\t\t\t}\r\n\t\t\tthis.log(args, undefined, preempt);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'name': case 'n': case 'N': {\r\n\t\t\tif (this.roomid) {\r\n\t\t\t\tlet room = app!.rooms[this.roomid];\r\n\t\t\t\tlet user = BattleTextParser.parseNameParts(args[1]);\r\n\t\t\t\tlet oldid = args[2];\r\n\t\t\t\tif (toUserid(oldid) === app!.user.get('userid')) {\r\n\t\t\t\t\tapp!.user.set({\r\n\t\t\t\t\t\taway: user.away,\r\n\t\t\t\t\t\tstatus: user.status,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tlet userid = toUserid(user.name);\r\n\t\t\t\troom.users[userid] = user;\r\n\t\t\t\troom.userList.remove(oldid);\r\n\t\t\t\troom.userList.add(userid);\r\n\t\t\t}\r\n\t\t\tif (!this.ignoreSpects) {\r\n\t\t\t\tthis.log(args, undefined, preempt);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'player': {\r\n\t\t\tlet side = this.getSide(args[1]);\r\n\t\t\tside.setName(args[2]);\r\n\t\t\tif (args[3]) side.setAvatar(args[3]);\r\n\t\t\tif (args[4]) side.rating = args[4];\r\n\t\t\tif (this.joinButtons) this.scene.hideJoinButtons();\r\n\t\t\tthis.log(args);\r\n\t\t\tthis.scene.updateSidebar(side);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'teamsize': {\r\n\t\t\tlet side = this.getSide(args[1]);\r\n\t\t\tside.totalPokemon = parseInt(args[2], 10);\r\n\t\t\tthis.scene.updateSidebar(side);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'win': case 'tie': {\r\n\t\t\tthis.winner(args[0] === 'tie' ? undefined : args[1]);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'prematureend': {\r\n\t\t\tthis.prematureEnd();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'clearpoke': {\r\n\t\t\tthis.p1.clearPokemon();\r\n\t\t\tthis.p2.clearPokemon();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'poke': {\r\n\t\t\tlet pokemon = this.rememberTeamPreviewPokemon(args[1], args[2])!;\r\n\t\t\tif (args[3] === 'item') {\r\n\t\t\t\tpokemon.item = '(exists)';\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'teampreview': {\r\n\t\t\tthis.teamPreviewCount = parseInt(args[1], 10);\r\n\t\t\tthis.scene.teamPreview();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'switch': case 'drag': case 'replace': {\r\n\t\t\tthis.endLastTurn();\r\n\t\t\tlet poke = this.getSwitchedPokemon(args[1], args[2])!;\r\n\t\t\tlet slot = poke.slot;\r\n\t\t\tpoke.healthParse(args[3]);\r\n\t\t\tpoke.removeVolatile('itemremoved' as ID);\r\n\t\t\tif (args[0] === 'switch') {\r\n\t\t\t\tif (poke.side.active[slot]) {\r\n\t\t\t\t\tpoke.side.switchOut(poke.side.active[slot]!);\r\n\t\t\t\t}\r\n\t\t\t\tpoke.side.switchIn(poke);\r\n\t\t\t} else if (args[0] === 'replace') {\r\n\t\t\t\tpoke.side.replace(poke);\r\n\t\t\t} else {\r\n\t\t\t\tpoke.side.dragIn(poke);\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'faint': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tpoke.side.faint(poke);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'swap': {\r\n\t\t\tif (isNaN(Number(args[2]))) {\r\n\t\t\t\tconst poke = this.getPokemon(args[1])!;\r\n\t\t\t\tpoke.side.swapWith(poke, this.getPokemon(args[2])!, kwArgs);\r\n\t\t\t} else {\r\n\t\t\t\tconst poke = this.getPokemon(args[1])!;\r\n\t\t\t\tconst targetIndex = parseInt(args[2], 10);\r\n\t\t\t\tif (kwArgs.from) {\r\n\t\t\t\t\tconst target = poke.side.active[targetIndex];\r\n\t\t\t\t\tif (target) args[2] = target.ident;\r\n\t\t\t\t}\r\n\t\t\t\tpoke.side.swapTo(poke, targetIndex, kwArgs);\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'move': {\r\n\t\t\tthis.endLastTurn();\r\n\t\t\tthis.resetTurnsSinceMoved();\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet move = Dex.getMove(args[2]);\r\n\t\t\tif (this.checkActive(poke)) return;\r\n\t\t\tlet poke2 = this.getPokemon(args[3]);\r\n\t\t\tthis.scene.beforeMove(poke);\r\n\t\t\tthis.useMove(poke, move, poke2, kwArgs);\r\n\t\t\tthis.animateMove(poke, move, poke2, kwArgs);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tthis.scene.afterMove(poke);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'cant': {\r\n\t\t\tthis.endLastTurn();\r\n\t\t\tthis.resetTurnsSinceMoved();\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet effect = Dex.getEffect(args[2]);\r\n\t\t\tlet move = Dex.getMove(args[3]);\r\n\t\t\tthis.cantUseMove(poke, effect, move, kwArgs);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'gen': {\r\n\t\t\tthis.gen = parseInt(args[1], 10);\r\n\t\t\tthis.dex = this.mod ? Dex.mod(this.mod) : Dex.forGen(this.gen);\r\n\t\t\tthis.scene.updateGen();\r\n\t\t\tthis.log(args);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'callback': {\r\n\t\t\tthis.subscription?.('callback');\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'fieldhtml': {\r\n\t\t\tthis.scene.setFrameHTML(BattleLog.sanitizeHTML(args[1]));\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'controlshtml': {\r\n\t\t\tthis.scene.setControlsHTML(BattleLog.sanitizeHTML(args[1]));\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tdefault: {\r\n\t\t\tthis.log(args, kwArgs, preempt);\r\n\t\t\tbreak;\r\n\t\t}}\r\n\t}\r\n\r\n\trun(str: string, preempt?: boolean) {\r\n\t\tif (!preempt && this.preemptStepQueue.length && str === this.preemptStepQueue[0]) {\r\n\t\t\tthis.preemptStepQueue.shift();\r\n\t\t\tthis.scene.preemptCatchup();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!str) return;\r\n\t\tconst {args, kwArgs} = BattleTextParser.parseBattleLine(str);\r\n\r\n\t\tif (this.scene.maybeCloseMessagebar(args, kwArgs)) {\r\n\t\t\tthis.currentStep--;\r\n\t\t\tthis.activeMoveIsSpread = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// parse the next line if it's a minor: runMinor needs it parsed to determine when to merge minors\r\n\t\tlet nextArgs: Args = [''];\r\n\t\tlet nextKwargs: KWArgs = {};\r\n\t\tconst nextLine = this.stepQueue[this.currentStep + 1] || '';\r\n\t\tif (nextLine.slice(0, 2) === '|-') {\r\n\t\t\t({args: nextArgs, kwArgs: nextKwargs} = BattleTextParser.parseBattleLine(nextLine));\r\n\t\t}\r\n\r\n\t\tif (this.debug) {\r\n\t\t\tif (args[0].charAt(0) === '-' || args[0] === 'detailschange') {\r\n\t\t\t\tthis.runMinor(args, kwArgs, nextArgs, nextKwargs);\r\n\t\t\t} else {\r\n\t\t\t\tthis.runMajor(args, kwArgs, preempt);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\ttry {\r\n\t\t\t\tif (args[0].charAt(0) === '-' || args[0] === 'detailschange') {\r\n\t\t\t\t\tthis.runMinor(args, kwArgs, nextArgs, nextKwargs);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.runMajor(args, kwArgs, preempt);\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\tthis.log(['majorerror', 'Error parsing: ' + str + ' (' + err + ')']);\r\n\t\t\t\tif (err.stack) {\r\n\t\t\t\t\tlet stack = ('' + err.stack).split('\\n');\r\n\t\t\t\t\tfor (const line of stack) {\r\n\t\t\t\t\t\tif (/\\brun\\b/.test(line)) {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.log(['error', line]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.subscription?.('error');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (nextLine.startsWith('|start') || args[0] === 'teampreview') {\r\n\t\t\tif (this.turn === -1) {\r\n\t\t\t\tthis.turn = 0;\r\n\t\t\t\tthis.scene.updateBgm();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tcheckActive(poke: Pokemon) {\r\n\t\tif (!poke.side.active[poke.slot]) {\r\n\t\t\t// SOMEONE jumped in in the middle of a replay. <_<\r\n\t\t\tpoke.side.replace(poke);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpause() {\r\n\t\tthis.paused = true;\r\n\t\tthis.scene.pause();\r\n\t\tthis.subscription?.('paused');\r\n\t}\r\n\t/**\r\n\t * Properties relevant to battle playback, for replay UI implementers:\r\n\t * - `ended`: has the game ended in a win/loss?\r\n\t * - `atQueueEnd`: is animation caught up to the end of the battle queue, waiting for more input?\r\n\t * - `seeking`: are we trying to skip to a specific turn\r\n\t * - `turn`: what turn are we currently on? `-1` if we haven't started yet, `0` at team preview\r\n\t * - `paused`: are we playing at all?\r\n\t */\r\n\tplay() {\r\n\t\tthis.paused = false;\r\n\t\tthis.started = true;\r\n\t\tthis.scene.resume();\r\n\t\tthis.nextStep();\r\n\t\tthis.subscription?.('playing');\r\n\t}\r\n\tskipTurn() {\r\n\t\tthis.seekTurn(this.turn + 1);\r\n\t}\r\n\tseekTurn(turn: number, forceReset?: boolean) {\r\n\t\tif (isNaN(turn)) return;\r\n\t\tturn = Math.max(Math.floor(turn), 0);\r\n\r\n\t\tif (this.seeking !== null && this.seeking > turn && !forceReset) {\r\n\t\t\tthis.seeking = turn;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (turn === 0) {\r\n\t\t\tthis.seeking = null;\r\n\t\t\tthis.resetStep();\r\n\t\t\tthis.scene.animationOn();\r\n\t\t\tif (this.paused) this.subscription?.('paused');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.seeking = turn;\r\n\r\n\t\tif (turn <= this.turn || forceReset) {\r\n\t\t\tthis.scene.animationOff();\r\n\t\t\tthis.resetStep();\r\n\t\t} else if (this.atQueueEnd) {\r\n\t\t\tthis.scene.animationOn();\r\n\t\t\tthis.seeking = null;\r\n\t\t} else {\r\n\t\t\tthis.scene.animationOff();\r\n\t\t\tthis.nextStep();\r\n\t\t}\r\n\t}\r\n\tstopSeeking() {\r\n\t\tthis.seeking = null;\r\n\t\tthis.scene.animationOn();\r\n\t\tthis.subscription?.(this.paused ? 'paused' : 'playing');\r\n\t}\r\n\tshouldStep() {\r\n\t\tif (this.atQueueEnd) return false;\r\n\t\tif (this.seeking !== null) return true;\r\n\t\treturn !(this.paused && this.turn >= 0);\r\n\t}\r\n\tnextStep() {\r\n\t\tif (!this.shouldStep()) return;\r\n\r\n\t\tthis.scene.startAnimations();\r\n\t\tlet animations = undefined;\r\n\r\n\t\tdo {\r\n\t\t\tthis.waitForAnimations = true;\r\n\t\t\tif (this.currentStep >= this.stepQueue.length) {\r\n\t\t\t\tthis.atQueueEnd = true;\r\n\t\t\t\tif (!this.ended && this.isReplay) this.prematureEnd();\r\n\t\t\t\tthis.stopSeeking();\r\n\t\t\t\tif (this.ended) {\r\n\t\t\t\t\tthis.scene.updateBgm();\r\n\t\t\t\t}\r\n\t\t\t\tthis.subscription?.('atqueueend');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.run(this.stepQueue[this.currentStep]);\r\n\t\t\tthis.currentStep++;\r\n\t\t\tif (this.waitForAnimations === true) {\r\n\t\t\t\tanimations = this.scene.finishAnimations();\r\n\t\t\t} else if (this.waitForAnimations === 'simult') {\r\n\t\t\t\tthis.scene.timeOffset = 0;\r\n\t\t\t}\r\n\t\t} while (!animations && this.shouldStep());\r\n\r\n\t\tif (this.paused && this.turn >= 0 && this.seeking === null) {\r\n\t\t\t// initial Play button, team preview\r\n\t\t\tthis.scene.pause();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!animations) return;\r\n\r\n\t\tconst interruptionCount = this.scene.interruptionCount;\r\n\t\tanimations.done(() => {\r\n\t\t\tif (interruptionCount === this.scene.interruptionCount) {\r\n\t\t\t\tthis.nextStep();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tsetQueue(queue: string[]) {\r\n\t\tthis.stepQueue = queue;\r\n\t\tthis.resetStep();\r\n\t}\r\n\r\n\tsetMute(mute: boolean) {\r\n\t\tBattleSound.setMute(mute);\r\n\t}\r\n}\r\n\r\nif (typeof require === 'function') {\r\n\t// in Node\r\n\t(global as any).Battle = Battle;\r\n\t(global as any).Pokemon = Pokemon;\r\n}\r\n"],"file":"battle.js"}